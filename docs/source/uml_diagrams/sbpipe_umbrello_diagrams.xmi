<?xml version="1.0" encoding="UTF-8"?>
<XMI xmi.version="1.2" xmlns:UML="http://schema.omg.org/spec/UML/1.3" timestamp="2016-11-08T11:59:12" verified="false">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.9</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" xmi.version="1.3" href="UML.xml"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isAbstract="false" isRoot="false" isLeaf="false" name="UML Model" xmi.id="m1" isSpecification="false">
   <UML:Namespace.ownedElement>
    <UML:Stereotype isAbstract="false" isLeaf="false" isRoot="false" name="folder" visibility="public" xmi.id="folder" namespace="m1" isSpecification="false"/>
    <UML:Stereotype isAbstract="false" isLeaf="false" isRoot="false" name="datatype" visibility="public" xmi.id="datatype" namespace="m1" isSpecification="false"/>
    <UML:Model isAbstract="false" isLeaf="false" isRoot="false" name="Logical View" visibility="public" xmi.id="Logical View" namespace="m1" isSpecification="false">
     <UML:Namespace.ownedElement>
      <UML:Package isAbstract="false" isLeaf="false" isRoot="false" name="Datatypes" visibility="public" xmi.id="Datatypes" namespace="Logical View" stereotype="folder" isSpecification="false">
       <UML:Namespace.ownedElement>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="int" visibility="public" xmi.id="HgjHzSPNYaTK" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="char" visibility="public" xmi.id="GnkIthw9jTvy" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="bool" visibility="public" xmi.id="aXRcBGSbP34j" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="float" visibility="public" xmi.id="SHAvtzAsNjWw" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="double" visibility="public" xmi.id="IPoQpQ5q6XcS" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="short" visibility="public" xmi.id="PY5WMEKMCY5G" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="long" visibility="public" xmi.id="9mrYvUnYZbVE" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="unsigned int" visibility="public" xmi.id="9s0f2WPQKO3r" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="unsigned short" visibility="public" xmi.id="w5MnJ7vfsm3H" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="unsigned long" visibility="public" xmi.id="A4oqlN7I5V2o" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="string" visibility="public" xmi.id="26VR1YNDt0V4" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="array" visibility="public" xmi.id="CG7vTwlfx02Y" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="tuple" visibility="public" xmi.id="2oa8OPI7TbnB" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="dict" visibility="public" xmi.id="k7pHRtTMvYWQ" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="object" visibility="public" xmi.id="fixqMmbXj5CX" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
        <UML:DataType isAbstract="false" isLeaf="false" isRoot="false" name="set" visibility="public" xmi.id="C0yEYnO7G4p3" namespace="Datatypes" stereotype="datatype" isSpecification="false"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Generalization name="" child="U7j10721gOHL" visibility="public" xmi.id="BMGLvrrMP5zw" namespace="Logical View" discriminator="" parent="8UBrhKppPK5E" isSpecification="false"/>
      <UML:Generalization name="" child="jCnt0lv3HoxN" visibility="public" xmi.id="5rtPebSy47H8" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="PWolCT6CL3lF" visibility="public" xmi.id="wQsuGew4wVNC" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="Aabs1z0xVH4B" visibility="public" xmi.id="6uRqRSH9JRAe" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="ckQA0Hz9reKz" visibility="public" xmi.id="ZApCFQAlkRgI" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="JhFHNr4GVPjh" visibility="public" xmi.id="OA2okXj1xYcN" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="VGP8jIfrAXll" visibility="public" xmi.id="iz23BtiHWfyy" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Generalization name="" child="AXjr1rS6ROxT" visibility="public" xmi.id="w3t7gO7bii9Y" namespace="Logical View" discriminator="" parent="YxoHtf14TOXy" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This class is used for printing a generic exception&#xa;" isLeaf="false" isRoot="false" name="Usage" visibility="public" xmi.id="U7j10721gOHL" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="BMGLvrrMP5zw"/>
        <UML:Generalization xmi.idref="CmWVfP2pQKqm"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This class is used for printing a generic exception&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="FFHSQIX75Kfl" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qZimkzHP7Bnj" type="26VR1YNDt0V4"/>
          <UML:Parameter name="msg" visibility="private" xmi.id="8Tf36OboN7qS" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isAbstract="false" isLeaf="false" isRoot="false" name="Exception" visibility="public" xmi.id="8UBrhKppPK5E" namespace="Logical View" isSpecification="false"/>
      <UML:Generalization name="" child="U7j10721gOHL" visibility="public" xmi.id="CmWVfP2pQKqm" namespace="Logical View" discriminator="" parent="8UBrhKppPK5E" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module initialises the folder tree for a new project.&#xa;    :param data_folder: the folder containing the data&#xa;    :param models_folder: the folder containing the models&#xa;    :param working_folder: the folder to store the results    &#xa;" isLeaf="false" isRoot="false" name="NewProj" visibility="public" xmi.id="jCnt0lv3HoxN" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5rtPebSy47H8"/>
        <UML:Generalization xmi.idref="sFoDsjx27rqL"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module initialises the folder tree for a new project.&#xa;:param data_folder: the folder containing the data&#xa;:param models_folder: the folder containing the models&#xa;:param working_folder: the folder to store the results    &#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="BpouoKeSiMpV" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Cgk5pG7OSftG" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="CzQvByjdzXqO" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Create a project directory tree.&#xa;        :param project_name: the name of the project&#xa;        :return: 0&#xa; if not os.path.exists(os.path.join(project_name,'GENSSI_struct_identif')): os.mkdir(os.path.join(project_name,'GENSSI_struct_identif')) if not os.path.exists(os.path.join(project_name,'MOTA_identif')): os.mkdir(os.path.join(project_name,'MOTA_identif')) if not os.path.exists(os.path.join(project_name,'sbtoolbox2')): os.mkdir(os.path.join(project_name,'sbtoolbox2')) if not os.path.exists(os.path.join(project_name,'sbtoolbox2','project_name')): os.mkdir(os.path.join(project_name,'sbtoolbox2','project_name')) if not os.path.exists(os.path.join(project_name,'sbtoolbox2','project_name','estimations')): os.mkdir(os.path.join(project_name,'sbtoolbox2','project_name','estimations')) if not os.path.exists(os.path.join(project_name,'sbtoolbox2','project_name','experiments')): os.mkdir(os.path.join(project_name,'sbtoolbox2','project_name','experiments')) if not os.path.exists(os.path.join(project_name,'sbtoolbox2','project_name','models')): os.mkdir(os.path.join(project_name,'sbtoolbox2','project_name','models'))" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="vdAC0eIW7WNF" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="w4MlOBRzxGii" type="26VR1YNDt0V4"/>
          <UML:Parameter name="project_name" visibility="private" xmi.id="zSrjhOBiiGu4" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="jCnt0lv3HoxN" visibility="public" xmi.id="sFoDsjx27rqL" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module provides the user with a complete pipeline of scripts for running&#xa;    model parameter estimations&#xa;" isLeaf="false" isRoot="false" name="ParEst" visibility="public" xmi.id="PWolCT6CL3lF" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="wQsuGew4wVNC"/>
        <UML:Generalization xmi.idref="NEga6tqaNoyy"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module provides the user with a complete pipeline of scripts for running&#xa;model parameter estimations&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="8BYugDmsNYcR" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DTB5JxpGVju2" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="xUjv2qvRncQM" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" variable initialisation Get the pipeline start time############################################################&quot;) preprocessing#############&quot;)############&quot;)#################&quot;)####################################&quot;) Create a gz tarball remember our original working directory change folder get back to our original working directory Print the pipeline elapsed time" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="1wR0AxpgncRI" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="sXKdGDeOFqys" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="oUujSAxT4IIQ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The first pipeline step: data generation.&#xa;        :param simulator: the name of the simulator (e.g. Copasi)&#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param cluster_type: pp for parallel python, lsf for load sharing facility, sge for sun grid engine&#xa;        :param pp_cpus: the number of cpu for parallel python&#xa;        :param nfits: the number of fits to perform&#xa;        :param outputdir: the directory to store the results&#xa;        :param sim_data_dir: the directory containing the simulation data sets&#xa;        :param updated_models_dir: the directory containing the models with updated parameters for&#xa;               each estimation&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; folder preparation" isLeaf="false" isRoot="false" name="generate_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="gzhSMu4mCgZI" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Jo4u4aGO4zeb" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="6LkaUetlH5YE" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="6PvlB5DZKdVm" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="Xa0lnWIroCA8" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="AK0uhcjeklz8" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="cluster_type" visibility="private" xmi.id="BRJSSuVHGXX3" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="pp_cpus" visibility="private" xmi.id="084Yfep5f6cY" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="nfits" visibility="private" xmi.id="LEvVa8TQWw0d" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="xI4qZx91wZiW" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_data_dir" visibility="private" xmi.id="i4fvE5P4yXDN" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="jMxy6wYpglRZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The second pipeline step: data analysis.&#xa;        :param model: the model name&#xa;        :param inputdir: the directory containing the simulation data&#xa;        :param outputdir: the directory to store the results&#xa;        :param fileout_final_estims: the name of the file containing final parameter sets with Chi^2&#xa;        :param fileout_all_estims: the name of the file containing all the parameter sets with Chi^2&#xa;        :param fileout_param_estim_details: the name of the file containing the detailed statistics for the \&#xa;        estimated parameters&#xa;        :param fileout_param_estim_summary: the name of the file containing the summary for the parameter estimation&#xa;        :param sim_plots_dir: the directory of the simulation plots&#xa;        :param best_fits_percent: the percent to consider for the best fits&#xa;        :param data_point_num: the number of data points&#xa;        :param plot_2d_66cl_corr: True if 2 dim plots for the parameter sets within 66% should be plotted&#xa;        :param plot_2d_95cl_corr: True if 2 dim plots for the parameter sets within 95% should be plotted&#xa;        :param plot_2d_99cl_corr: True if 2 dim plots for the parameter sets within 99% should be plotted        &#xa;        :param logspace: True if parameters should be plotted in log space&#xa;        :param scientific_notation: True if axis labels should be plotted in scientific notation&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; Collect and summarises the parameter estimation results" isLeaf="false" isRoot="false" name="analyse_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="vCngjyFL3rii" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="pgttoYCiO2ae" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="8TDqePwUUHDB" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="LA3MJEGaR4wf" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="LB6yFUq45Hdp" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="67n83FO6szUX" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="fileout_final_estims" visibility="private" xmi.id="UpTMqTGoTeMQ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="fileout_all_estims" visibility="private" xmi.id="5Z7Pe5cxTts0" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="Pu13gBYAfcHs" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The third pipeline step: report generation.&#xa;        :param model: the model name&#xa;        :param outputdir: the directory to store the report&#xa;        :param sim_plots_folder: the folder containing the plots&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_report" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="AYOYAJx85kQq" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="E1xR454kaPAI" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="etclR8d1yvLi" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="cq8RLkTD3o8C" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="6oH5wvVpuf8Y" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_folder" visibility="private" xmi.id="MjZtyQg028Mj" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" parse common options default values The simulator Generate a zipped tarball The parallel mechanism to use (pp | sge | lsf). The number of cpus for pp The parameter estimation round The number of jobs to be executed The percent of best fits to consider The number of available data points Plot 2D correlations using data from 66% confidence levels This can be very time/memory consuming Plot 2D correlations using data from 95% confidence levels This can be very time/memory consuming Plot 2D correlations using data from 99% confidence levels This can be very time/memory consuming True if the parameters should be plotted in log10 space. True if axis labels should be plotted in scientific notation Initialises the variables" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="TLWKPjVkXN2s" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XYWIY4TtfktB" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="wSrYJUv9MI9J" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="PWolCT6CL3lF" visibility="public" xmi.id="NEga6tqaNoyy" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module provides the user with a complete pipeline of scripts for computing &#xa;    single parameter scans.&#xa;" isLeaf="false" isRoot="false" name="ParScan1" visibility="public" xmi.id="Aabs1z0xVH4B" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="6uRqRSH9JRAe"/>
        <UML:Generalization xmi.idref="Dn8HAKLi0CVL"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module provides the user with a complete pipeline of scripts for computing &#xa;single parameter scans.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="kIUQeOAyS9oF" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zAuD6HpC3Cxz" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="7Jav8MoGhtOH" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" variable initialisation Get the pipeline start time############################################################&quot;) preprocessing###############&quot;)#############&quot;)#################&quot;) Print the pipeline elapsed time" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="x4MzA2x1pZ7T" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="DOK3b7Jo1hQu" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="nWjnY4luhlBc" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The first pipeline step: data generation.&#xa;        :param simulator: the name of the simulator (e.g. Copasi)&#xa;        :param model: the model to process&#xa;        :param scanned_par: the scanned parameter&#xa;        :param sim_number: the number of simulations (for det sim: 1, for stoch sim: n>1)&#xa;        :param simulate_intervals: the time step of each simulation&#xa;        :param single_param_scan_intervals: the number of scans to perform&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="OW9GT8xjI07w" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="5mq1rk1npfY2" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="WR5Y3bcCbJmX" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="fonCBP8TX3dz" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="yBOYdRKq9QJZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par" visibility="private" xmi.id="iydC3eBCWFV9" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_number" visibility="private" xmi.id="ixgqUelkHdmm" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulate_intervals" visibility="private" xmi.id="nvMAY1xWIYRy" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="FOfbPGeUUTHH" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The second pipeline step: data analysis.&#xa;        :param model: the model name&#xa;        :param scanned_par: the scanned parameter&#xa;        :param knock_down_only: True for knock down simulation, false if also scanning over expression.&#xa;        :param outputdir: the directory containing the results&#xa;        :param sim_data_folder: the folder containing the simulated data sets&#xa;        :param sim_plots_folder: the folder containing the generated plots&#xa;        :param simulations_number: the number of simulations&#xa;        :param percent_levels: True if the levels are percents.&#xa;        :param min_level: the minimum level&#xa;        :param max_level: the maximum level&#xa;        :param levels_number: the number of levels&#xa;        :param homogeneous_lines: True if generated line style should be homogeneous&#xa;        :param xaxis_label: the name of the x axis (e.g. Time [min])&#xa;        :param yaxis_label: the name of the y axis (e.g. Level [a.u.])&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; some control folder preparation" isLeaf="false" isRoot="false" name="analyse_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="m8wmv7wBMhMr" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="s2wuiiKcBeUX" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="5CuAKABTnV7N" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="BqxMEfs9vhKN" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par" visibility="private" xmi.id="jyme4XLZpxuZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="knock_down_only" visibility="private" xmi.id="1gagPFOJeivq" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="V9gaXdziukvh" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="b1nKNvI8QjKa" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The third pipeline step: report generation.&#xa;        :param model: the model name&#xa;        :param scanned_par: the scanned parameter&#xa;        :param outputdir: the directory containing the report&#xa;        :param sim_plots_folder: the folder containing the plots&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_report" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="hN1K3pT1DBgC" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="joWg95nV7Sm5" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="YPpBMWzMZP4b" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="qYSWjscfzLKd" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par" visibility="private" xmi.id="mnSU15jJXs6B" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="AhuKvEZUV8CK" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_folder" visibility="private" xmi.id="DNaey3t8IYMJ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" parse common options default values The model species to scan (e.g. mTORC1) The number of intervals for one simulation The plot x axis label (e.g. Time[min]) The x axis label The y axis label The number of simulations (e.g. 1 for deterministic simulations, n for stochastic simulations) The scanning is performed on percent levels (true) or through a modelled inhibitor/expressor (false) if True then, plot only kd (blue), otherwise plot kd and overexpression The number of levels of inhibition/over-expression minimum level maximum level True if lines should have the same colour, no linetype, no legend. Useful for scanning from a confidence interval If this is true, it overrides: - single_param_scan_percent_levels and - single_param_scan_knock_down_only Initialises the variables" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="jBKZclsu8IiZ" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7Vb6cWpwSbVt" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="lqlEBFJn5tdy" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="Aabs1z0xVH4B" visibility="public" xmi.id="Dn8HAKLi0CVL" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module provides the user with a complete pipeline of scripts for computing &#xa;    double parameter scans.&#xa;" isLeaf="false" isRoot="false" name="ParScan2" visibility="public" xmi.id="ckQA0Hz9reKz" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="ZApCFQAlkRgI"/>
        <UML:Generalization xmi.idref="meEE2JlPZk0G"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module provides the user with a complete pipeline of scripts for computing &#xa;double parameter scans.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="wtl6jIf3p8Rd" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yA8ayfdvMuTc" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="65SJBKLs4MXl" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" variable initialisation Get the pipeline start time############################################################&quot;) preprocessing###############&quot;)#############&quot;)#################&quot;) Print the pipeline elapsed time" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="OxmHk4QxIZGU" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GDWoBXSNSFAK" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="b5z4pff7ZHHP" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The first pipeline step: data generation.&#xa;        :param simulator: the name of the simulator (e.g. Copasi)&#xa;        :param model: the model to process&#xa;        :param sim_length: the length of the simulation&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="yWXeQajVFRrE" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="1zHGh5y7nJ65" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="02aipd8h5T9h" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="7JH1jawcmeU0" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="N8BOYfJgF3Ci" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_length" visibility="private" xmi.id="KC7PedXRPJbZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="vKt4ZfzD2fIf" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="xZiKxMRjbQiW" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The second pipeline step: data analysis.&#xa;        :param model: the model name&#xa;        :param scanned_par1: the first scanned parameter&#xa;        :param scanned_par2: the second scanned parameter&#xa;        :param inputdir: the directory containing the simulated data sets to process&#xa;        :param outputdir: the directory to store the performed analysis&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; folder preparation" isLeaf="false" isRoot="false" name="analyse_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="cimUKhypPTwU" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="4nB28aZOHcUU" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="CWGwGEQVtrpx" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="AB2J8wj2kVeU" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par1" visibility="private" xmi.id="4lxVt9rz1DXX" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par2" visibility="private" xmi.id="r4BmLLIIcALh" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="EbTrLiD0Am1a" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="oykcKYf4zqYL" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The third pipeline step: report generation.&#xa;        :param model: the model name&#xa;        :param scanned_par1: the first scanned parameter&#xa;        :param scanned_par2: the second scanned parameter&#xa;        :param outputdir: the directory containing the report&#xa;        :param sim_plots_folder: the folder containing the plots.&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_report" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="eXKG3Kzj7gYN" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="a7PBsfabXiuH" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="C77mB1wgBt4W" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="x1lScOziy9ew" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par1" visibility="private" xmi.id="2JfsJbZu8aFp" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par2" visibility="private" xmi.id="XzNjKvUyoW4U" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="xo2WGDPk6np5" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_folder" visibility="private" xmi.id="kcChfW3GdiHS" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" parse common options default values the first scanned param the second scanned param the simulation length Initialises the variables" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="kTrsYnFrTth3" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M0OM90iVkXBa" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="I7PK4bBJfk1T" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="ckQA0Hz9reKz" visibility="public" xmi.id="meEE2JlPZk0G" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module provides the user with a complete pipeline of scripts for computing &#xa;    model sensitivity analysis.&#xa;" isLeaf="false" isRoot="false" name="Sens" visibility="public" xmi.id="JhFHNr4GVPjh" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="OA2okXj1xYcN"/>
        <UML:Generalization xmi.idref="Uonf9VjIfwgF"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module provides the user with a complete pipeline of scripts for computing &#xa;model sensitivity analysis.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="JCBArQsi57tU" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ojxkTo4x5XqC" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="Cu2YmW728yai" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" variable initialisation Get the pipeline start time############################################################&quot;) preprocessing remove the folder the previous results if any filesToDelete = glob.glob(os.path.join(sensitivities_dir, &quot;*.png&quot;)) for f in filesToDelete:     os.remove(f)###############&quot;)#############&quot;)#################&quot;) Print the pipeline elapsed time" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="l8ERPiZCH6YG" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="QHE3lHIMsIKi" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="mNYRrkxZOTCm" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The first pipeline step: data generation.&#xa;        :param simulator: the name of the simulator (e.g. Copasi)&#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; folder preparation execute runs simulations. Input parameters outputdir" isLeaf="false" isRoot="false" name="generate_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="HdLMfNqtaAmY" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="M9baj5Jd66zB" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="XO4FeyaA0dG8" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="O8YxvuHZ0KvO" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="HOEefRVwejjU" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="XoZcOjAebuEl" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="1278qbUGoMOk" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The second pipeline step: data analysis.&#xa;        :param outputdir: the directory to store the performed analysis.&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="analyse_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="5cOYaqmVVHZx" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="U6K4QCcCsMZN" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="YJdHDxaxYKG2" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="bkE2OyocB6yK" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The third pipeline step: report generation.&#xa;        :param model: the model name&#xa;        :param outputdir: the directory to store the report&#xa;        :param sim_plots_folder: the directory containing the time courses results combined with experimental data&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_report" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="hr2RAQOplXF5" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="T0Z0un7acyV1" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="p4QWJhMSP2o6" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="4JwM6c1UBjyP" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="XRBSgiHYVTnZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_folder" visibility="private" xmi.id="Sm2ozLrU6gd6" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" parse common options default values Initialises the variables" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="JCgIPLLPFLzT" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="kDDDDsby3fkA" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="rH0QmrHykHum" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="JhFHNr4GVPjh" visibility="public" xmi.id="Uonf9VjIfwgF" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    This module provides the user with a complete pipeline of scripts for running &#xa;    model simulations&#xa;" isLeaf="false" isRoot="false" name="Sim" visibility="public" xmi.id="VGP8jIfrAXll" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="iz23BtiHWfyy"/>
        <UML:Generalization xmi.idref="AVOuGk55Jt3o"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This module provides the user with a complete pipeline of scripts for running &#xa;model simulations&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="5CCtYMA7dxqg" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9hqZo1dJAaQT" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="kTTfzNx5e4k9" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" variable initialisation Some controls Get the pipeline start time############################################################&quot;) preprocessing###############&quot;)#############&quot;)#################&quot;) Print the pipeline elapsed time" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="AQVGGe5X6xJy" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="tdE9Esd0B7hH" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="qDnY8HXVa4k9" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The first pipeline step: data generation.&#xa;        :param simulator: the name of the simulator (e.g. Copasi)&#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory containing the output files&#xa;        :param cluster_type: pp for local Parallel Python, lsf for Load Sharing Facility, sge for Sun Grid Engine.&#xa;        :param pp_cpus: the number of CPU used by Parallel Python.&#xa;        :param runs: the number of model simulation&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; folder preparation execute runs simulations." isLeaf="false" isRoot="false" name="generate_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="xFHRwDpD1gpY" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vvrXGZHUsZna" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="idXuXGRiYNna" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="2yUIubSkdHlL" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="71lLxH1GsWgN" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="5bzVUIUhlG9q" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="B2bwhhFMcmZc" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="cluster_type" visibility="private" xmi.id="iBHKfuTNuEtr" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The second pipeline step: data analysis.&#xa;        :param model: the model name&#xa;        :param inputdir: the directory containing the data to analyse&#xa;        :param outputdir: the output directory containing the results&#xa;        :param sim_plots_dir: the directory to save the plots&#xa;        :param exp_dataset: the full path of the experimental data set&#xa;        :param plot_exp_dataset: True if the experimental data set should also be plotted&#xa;        :param xaxis_label: the label for the x axis (e.g. Time [min])&#xa;        :param yaxis_label: the label for the y axis (e.g. Level [a.u.])&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa; folder preparation" isLeaf="false" isRoot="false" name="analyse_data" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="226wwjZLn34t" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xlwFnRFmCKHR" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="dDsM60ly6p4I" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="GpY7izkNVlbA" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="yC5TBum9SMMG" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="KYaB99fTXL9g" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_dir" visibility="private" xmi.id="7NlX2tWaBT5G" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="exp_dataset" visibility="private" xmi.id="uQodeIPcDEPl" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="plot_exp_dataset" visibility="private" xmi.id="mqIfLXC7sVUl" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="xaxis_label" visibility="private" xmi.id="Ut8dZMGXyl48" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="myWHPGI0CX42" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The third pipeline step: report generation.&#xa;        :param model: the model name&#xa;        :param outputdir: the output directory to store the report&#xa;        :param sim_plots_folder: the folder containing the plots&#xa;        :return: True if the task was completed successfully, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="generate_report" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="VC6jtTzksHhI" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="inKIPSX0NcXO" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="aoIdAH5b5Mwz" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="model" visibility="private" xmi.id="AUAIhcFVyIua" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="hhX68FL8Jiwv" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_plots_folder" visibility="private" xmi.id="kZQTYmPFtGZ3" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment=" parse common options default values Initialises the variables" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="ZeUFGBFEGVgG" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="HytozkVFj4f5" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="7KaTIz7kEJIu" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isAbstract="false" comment="    Generic pipeline.&#xa;    :param data_folder: the folder containing the experimental (wet) data sets&#xa;    :param models_folder: the folder containing the models&#xa;    :param working_folder: the folder to store the results&#xa;    :param sim_data_folder: the folder to store the simulation data&#xa;    :param sim_plots_folder: the folder to store the graphic results&#xa;" isLeaf="false" isRoot="false" name="Pipeline" visibility="public" xmi.id="HejAXrTdRO2l" namespace="Logical View" isSpecification="false">
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="Generic pipeline.&#xa;:param data_folder: the folder containing the experimental (wet) data sets&#xa;:param models_folder: the folder containing the models&#xa;:param working_folder: the folder to store the results&#xa;:param sim_data_folder: the folder to store the simulation data&#xa;:param sim_plots_folder: the folder to store the graphic results&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="InXqo2Y0JQNP" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="VDYZrWnsy4jf" type="26VR1YNDt0V4"/>
          <UML:Parameter name="data_folder" visibility="private" xmi.id="OYhUY5tAgP3V" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Run the pipeline.&#xa;        :param config_file: a configuration file for this pipeline.&#xa;        :return: True if the pipeline was executed correctly, False otherwise.&#xa;" isLeaf="false" isRoot="false" name="run" visibility="public" isQuery="false" xmi.id="2hBAsKYXzzCb" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6F8sbQu2O2vL" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="eQbjiobqEU46" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the folder containing the experimental (wet) data sets.&#xa;        &#xa;        :return: the experimental data sets folder.&#xa;" isLeaf="false" isRoot="false" name="get_data_folder" visibility="public" isQuery="false" xmi.id="xbgVWNq1U2qp" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0aPwRFasXv75" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the folder containing the models.&#xa;        &#xa;        :return: the models folder.&#xa;" isLeaf="false" isRoot="false" name="get_models_folder" visibility="public" isQuery="false" xmi.id="w0qeJ18g3YVC" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="zoRq8T80jTy6" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the folder containing the results.&#xa;        &#xa;        :return: the working folder.&#xa;" isLeaf="false" isRoot="false" name="get_working_folder" visibility="public" isQuery="false" xmi.id="nUjRLv1xHUEj" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="cEc95WRQzSPc" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the folder containing the in-silico generated data sets.&#xa;        &#xa;        :return: the folder of the simulated data sets.&#xa;" isLeaf="false" isRoot="false" name="get_sim_data_folder" visibility="public" isQuery="false" xmi.id="ccSByjPcUM4M" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="K9wpS8L1FbaI" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the folder containing the in-silico generated plots.&#xa;        &#xa;        :return: the folder of the simulated plots.&#xa;" isLeaf="false" isRoot="false" name="get_sim_plots_folder" visibility="public" isQuery="false" xmi.id="Vnq1QRD75umr" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Q6CjjJEIktbi" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the simulator object if this exists. Otherwise throws an exception.&#xa;        The simulator name starts with an upper case letter. Each simulator is in a package&#xa;        within `sbpipe.simulator`.&#xa;       &#xa;        :param simulator: the simulator name&#xa;        :return: the simulator object.&#xa; use reflection to dynamically load the simulator class by name" isLeaf="false" isRoot="false" name="get_simul_obj" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="M0rfZgQaF72o" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="xvPeKLugqLyG" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="qKlvahZvgNOG" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulator" visibility="private" xmi.id="jzLKq98QFtXQ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the configuration for the parsed section in the config_file&#xa;        &#xa;        :param config_file: the configuration file to parse&#xa;        :param section: the section in the configuration file to parse&#xa;        :return: the configuration for the parsed section in the config_file&#xa;" isLeaf="false" isRoot="false" name="config_parser" visibility="public" isQuery="false" xmi.id="j5LPRFZRftSU" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oylZm9DQdM3V" type="26VR1YNDt0V4"/>
          <UML:Parameter name="config_file" visibility="private" xmi.id="OBkQyS8WKKIr" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="section" visibility="private" xmi.id="4LKPF0DD0L0n" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Read the section lines from the configuration file. This method is abstract.&#xa;        &#xa;        :return: a tuple containing the configuration&#xa;" isLeaf="false" isRoot="false" name="read_config" visibility="public" isQuery="false" xmi.id="KJp81PtQ2p7O" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="iElAr9jBACN1" type="26VR1YNDt0V4"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="lSVzYT7TLGUt" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Parse the common parameters from the configuration file&#xa;        :param lines: the lines to parse.&#xa;        :return: return a tuple containing the common parameters&#xa; default values Boolean flag Boolean flag Boolean flag the project directory the  model Initialises the variables logger.info(line)" isLeaf="false" isRoot="false" name="read_common_config" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="Ve0H9g7SkOhB" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qAFuLqBVA7aF" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="tT9xHvIniGap" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="lines" visibility="private" xmi.id="ILzprLUtXXQy" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="VGP8jIfrAXll" visibility="public" xmi.id="AVOuGk55Jt3o" namespace="Logical View" discriminator="" parent="HejAXrTdRO2l" isSpecification="false"/>
      <UML:Class isAbstract="false" isLeaf="false" isRoot="false" name="Copasi" visibility="public" xmi.id="AXjr1rS6ROxT" namespace="Logical View" isSpecification="false">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="w3t7gO7bii9Y"/>
        <UML:Generalization xmi.idref="6DM7dVCzEAig"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class isAbstract="false" comment="    Generic simulator.&#xa;" isLeaf="false" isRoot="false" name="Simul" visibility="public" xmi.id="YxoHtf14TOXy" namespace="Logical View" isSpecification="false">
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="Generic simulator.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="cI64YFuo18Gp" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="yJGKhqmbokbK" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Time course simulator.&#xa;        &#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory containing the output files&#xa;        :param cluster_type: pp for local Parallel Python, lsf for Load Sharing Facility, sge for Sun Grid Engine.&#xa;        :param pp_cpus: the number of CPU used by Parallel Python.&#xa;        :param runs: the number of model simulation&#xa;" isLeaf="false" isRoot="false" name="sim" visibility="public" isQuery="false" xmi.id="F5VQxoVFkvDH" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="OaieixsAmN1Z" type="26VR1YNDt0V4"/>
          <UML:Parameter name="model" visibility="private" xmi.id="g42bco0uurIF" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="axGIjOjCfKFP" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="J1adUVf6vixG" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="cluster_type" visibility="private" xmi.id="yl1sjX0DuLl8" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Single parameter scan.&#xa;        &#xa;        :param model: the model to process&#xa;        :param scanned_par: the scanned parameter&#xa;        :param sim_number: the number of simulations (for det sim: 1, for stoch sim: n>1)&#xa;        :param simulate_intervals: the time step of each simulation&#xa;        :param single_param_scan_intervals: the number of scans to perform&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;" isLeaf="false" isRoot="false" name="ps1" visibility="public" isQuery="false" xmi.id="hGieeluJYKe5" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hU7dRaMmxMQx" type="26VR1YNDt0V4"/>
          <UML:Parameter name="model" visibility="private" xmi.id="2zorlu5UU2cS" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="scanned_par" visibility="private" xmi.id="fWwpceuTfs6l" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_number" visibility="private" xmi.id="K5loonjNkH6L" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="simulate_intervals" visibility="private" xmi.id="kbKz26RtDbar" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="8r0jC2Z4Irik" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Double paramter scan.&#xa;        &#xa;        :param model: the model to process&#xa;        :param sim_length: the length of the simulation&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;" isLeaf="false" isRoot="false" name="ps2" visibility="public" isQuery="false" xmi.id="IOFH2EwR0pMg" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hm5quPWIsPa4" type="26VR1YNDt0V4"/>
          <UML:Parameter name="model" visibility="private" xmi.id="9snqPw7C9CCc" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_length" visibility="private" xmi.id="d1wNtbqvvk8n" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="Ny6f7rIJr9VH" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="6LIA9hHCJAqG" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        parameter estimation.&#xa;        &#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param cluster_type: pp for parallel python, lsf for load sharing facility, sge for sun grid engine&#xa;        :param pp_cpus: the number of cpu for parallel python&#xa;        :param nfits: the number of fits to perform&#xa;        :param outputdir: the directory to store the results&#xa;        :param sim_data_dir: the directory containing the simulation data sets&#xa;        :param updated_models_dir: the directory containing the models with updated parameters for&#xa;               each estimation&#xa;" isLeaf="false" isRoot="false" name="pe" visibility="public" isQuery="false" xmi.id="6OpU6RYYG7yd" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Gw4pb4EEhuvJ" type="26VR1YNDt0V4"/>
          <UML:Parameter name="model" visibility="private" xmi.id="avmixfM5Omfg" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="WY4YI18IKnhc" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="cluster_type" visibility="private" xmi.id="l40QiFziQbyV" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="pp_cpus" visibility="private" xmi.id="8fTV5cTOKUkI" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="nfits" visibility="private" xmi.id="FVms0N368bCd" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="QC8NCRHRLG99" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="sim_data_dir" visibility="private" xmi.id="ng5xXRdNUmcU" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name=";" visibility="private" xmi.id="MbbqVIKGjxB9" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Sensitivity analysis.&#xa;        &#xa;        :param model: the model to process&#xa;        :param inputdir: the directory containing the model&#xa;        :param outputdir: the directory to store the results&#xa;" isLeaf="false" isRoot="false" name="sens" visibility="public" isQuery="false" xmi.id="C9G1CWlbFo0F" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="k0eD7JLomKNc" type="26VR1YNDt0V4"/>
          <UML:Parameter name="model" visibility="private" xmi.id="Hlcj23Pb5G9U" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="inputdir" visibility="private" xmi.id="rDAnmExUzth1" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="outputdir" visibility="private" xmi.id="cBJQKqJgFkmZ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Generalization name="" child="AXjr1rS6ROxT" visibility="public" xmi.id="6DM7dVCzEAig" namespace="Logical View" discriminator="" parent="YxoHtf14TOXy" isSpecification="false"/>
      <UML:Class isAbstract="false" comment="    Retrieve information from a Copasi file.&#xa;" isLeaf="false" isRoot="false" name="CopasiParser" visibility="public" xmi.id="vyJVJIk5gdEi" namespace="Logical View" isSpecification="false">
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="Retrieve information from a Copasi file.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="gsoR4WIj2e6O" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="x6efhd90u250" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Parse a Copasi file and retrieve information on the parameters to estimate.&#xa;        :param file_in: the Copasi file including absolute path to parse&#xa;        :return: a tuple containing the report file name, the parameter lower bounds, \&#xa;        names, starting values, and upper bounds&#xa; select the task tag (note: root->ListOfTaks->Tasks) iterates tasks list select Parameter Estimation task retrieve report name for this task retrieve parameter values retrieve lowerbound param retrieve param name retrieve start value param retrieve upperbound param" isLeaf="false" isRoot="false" name="get_param_estim_val" ownerScope="classifier" visibility="public" isQuery="false" xmi.id="0ekub6ZWm7qH" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Vy1mSoIPSLw7" type="26VR1YNDt0V4"/>
          <UML:Parameter name="cls" visibility="private" xmi.id="i4WdEsa44FTy" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="file_in" visibility="private" xmi.id="MDCDJqBI5qt1" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isAbstract="false" comment="    This class generates multiple copies of a Copasi file configured for parameter estimation task,&#xa;    and randomises the starting values of the parameters to estimate.&#xa;    &#xa;    :param path: the path to filename_in&#xa;    :param filename_in: the Copasi file to process.    &#xa;" isLeaf="false" isRoot="false" name="Randomise" visibility="public" xmi.id="BM7TtfkQaT43" namespace="Logical View" isSpecification="false">
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="This class generates multiple copies of a Copasi file configured for parameter estimation task,&#xa;and randomises the starting values of the parameters to estimate.&#xa;&#xa;:param path: the path to filename_in&#xa;:param filename_in: the Copasi file to process.    &#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="VbKcXJUTs2ON" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="d7NFffYfEymB" type="26VR1YNDt0V4"/>
          <UML:Parameter name="path" visibility="private" xmi.id="nW80sKvfAqdO" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="filename_in" visibility="private" xmi.id="5NY5eMzKsRmd" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Randomise the starting values for the parameter to estimate.&#xa;        :param num_files: the number of files (instances) to generate&#xa;        :param idstr: an ID string to label the generated files (e.g. a timestamp)&#xa; initialise the names and generate the output file 1) RANDOMIZATION 2) PRINT NEW VALUES logger.info(&quot;\nInitial parameters for the output file: &quot; + file_out) 3) REPLACE VALUES IN THE NEW FILE" isLeaf="false" isRoot="false" name="randomise" visibility="public" isQuery="false" xmi.id="VyTkC2mdLzVy" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="vDWRMVEGDCUy" type="26VR1YNDt0V4"/>
          <UML:Parameter name="num_files" visibility="private" xmi.id="k94VhYFfMgGK" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="idstr" visibility="private" xmi.id="KeM0MBcgS86r" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Generate num_files files and add an ID string to Copasi file/report names &#xa;        :param num_files: the number of files (instances) to generate&#xa;        :param idstr: an ID string to label the generated files (e.g. a timestamp)&#xa; initialise the names and generate the output file" isLeaf="false" isRoot="false" name="replicate" visibility="public" isQuery="false" xmi.id="l9PJa3VOIkAd" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="7DuK1qqVVa2Z" type="26VR1YNDt0V4"/>
          <UML:Parameter name="num_files" visibility="private" xmi.id="aN2YkoHt39T6" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="idstr" visibility="private" xmi.id="NZr0EVQ6Tu6q" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the Copasi parser object&#xa;        :return: the Copasi parser object&#xa;" isLeaf="false" isRoot="false" name="get_copasi_obj" visibility="public" isQuery="false" xmi.id="1OVLAW7LZ8SK" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="eJXM4xT0xAjl" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the path containing the template Copasi file&#xa;        :return: the path to the Copasi file&#xa;" isLeaf="false" isRoot="false" name="get_path" visibility="public" isQuery="false" xmi.id="ShGwazwEKsij" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="PdWX6KdIg4z1" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the name of the template Copasi file&#xa;        :return: the name of the Copasi file&#xa;" isLeaf="false" isRoot="false" name="get_template_copasi_file" visibility="public" isQuery="false" xmi.id="wZIusMEd2ckh" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="LBjKg9vPtjGO" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the name of the template parameter estimation report&#xa;        :return: the name of the report file name for parameter estimation&#xa;" isLeaf="false" isRoot="false" name="get_report_filename" visibility="public" isQuery="false" xmi.id="jDUUZcU7MqGN" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="NpG3FxcDLHJP" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the list of parameter lower bounds&#xa;        :return: the list of parameter lower bounds&#xa;" isLeaf="false" isRoot="false" name="get_lower_bounds_list" visibility="public" isQuery="false" xmi.id="Gg6RpWIj7I7U" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="en90i27bmb5R" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the list of parameter names&#xa;        :return: the list of parameter names&#xa;" isLeaf="false" isRoot="false" name="get_param_names_list" visibility="public" isQuery="false" xmi.id="WyImXPbC3Jhl" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GGklVigu5Ycc" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the list of parameter starting values&#xa;        :return: the list of parameter starting values&#xa;" isLeaf="false" isRoot="false" name="get_start_values_list" visibility="public" isQuery="false" xmi.id="nIckw73ynV6j" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="SD1oC4mIODcM" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the list of parameter upper bounds&#xa;        :return: the list of parameter upper bounds&#xa;" isLeaf="false" isRoot="false" name="get_upper_bounds_list" visibility="public" isQuery="false" xmi.id="2RELhggJrJz5" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="oSsYVLPPZJSv" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Print the parameter names, lower/upper bounds, and starting value, as extracted from COPASI template file&#xa;" isLeaf="false" isRoot="false" name="print_params_2_estim" visibility="public" isQuery="false" xmi.id="krF3rbUBRbNO" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="GbOzLFPHFUsk" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Print the parameter names, lower/upper bounds, and starting value, as extracted from COPASI template file. &#xa;        Additionally, the new random starting value is also printed for each parameter.&#xa;        :param new_start_values: the list of new starting values for the parameters.&#xa;" isLeaf="false" isRoot="false" name="__print_params_to_estim2" visibility="public" isQuery="false" xmi.id="8o3eTnOBjdcW" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="0Ig5Anr57CuL" type="26VR1YNDt0V4"/>
          <UML:Parameter name="new_start_values" visibility="private" xmi.id="GBK7vjGaS9z5" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Randomise the parameter starting values&#xa;        :return: the lists of new starting values together with the lists of old and new XML strings containing &#xa;        the old / new starting values in the Copasi file.&#xa; Randomize the starting values using the respective lower and upper bounds using a uniform distibution Either the lower or the upper bound is a variable. Fix a random value in [1e-05,1] The lower and the upper bounds are constants logger.debug(old_str[i]) logger.debug(new_str[i])" isLeaf="false" isRoot="false" name="__rand_start_value" visibility="public" isQuery="false" xmi.id="dleiIHp6HCmO" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="9LwZCi6SifVC" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        For each parameter to estimate, replace the current start value with the new randomised start value&#xa;        :param file_out: the Copasi output file.&#xa;        :param old_str: the list of XML strings containing the old starting values. &#xa;        :param new_str: the list of XML strings containing the new starting values.&#xa; Check whether the replacement of the parameter start value is exactly for the parameter estimation task and for the corresponding parameter name. So, if different parameters have same start values, the algorithm replaces only the value for the corresponding parameter and not to all the instances with equal start value. (A) Retrieve the line number of the current parameter name to edit logger.debug(ctrl_str) (B) Retrieve the line number of the current parameter start value to edit Test whether start_value of reference corresponds to the retrieved parameter name or not. replace the parameter starting value" isLeaf="false" isRoot="false" name="__replace_start_value" visibility="public" isQuery="false" xmi.id="QsdbPLKK3tkC" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="3ZT4iPhFTR1I" type="26VR1YNDt0V4"/>
          <UML:Parameter name="file_out" visibility="private" xmi.id="SluIzQmHL3XQ" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="old_str" visibility="private" xmi.id="ZhrZi2aoMfQL" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="new_str" visibility="private" xmi.id="TXfKEo1ko1o4" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Replace the report file name&#xa;        :param file_out: the Copasi output file.&#xa;        :param report_filename: the report file name&#xa;" isLeaf="false" isRoot="false" name="__replace_report_filename" visibility="public" isQuery="false" xmi.id="S1CDUGbGiXlK" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="bWQR6G0YZsRK" type="26VR1YNDt0V4"/>
          <UML:Parameter name="file_out" visibility="private" xmi.id="l7xZRV3rePpW" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="report_filename" visibility="private" xmi.id="SyTc4oi1dQ12" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isAbstract="false" isLeaf="false" isRoot="false" name="Monitor" visibility="public" xmi.id="QZYfNhxSHJy5" namespace="Logical View" isSpecification="false">
       <UML:Classifier.feature>
        <UML:Operation isAbstract="false" comment="        Constructor.&#xa;" isLeaf="false" isRoot="false" name="__init__" visibility="public" isQuery="false" xmi.id="hga99qKY5ZiO" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="6ThvfnPaoEMv" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        The callback function&#xa;        :param pid: this is callbackargs passed to parallel python `submit()` method&#xa;        :param value: the return value of the parallelised function. It is the callback value.        &#xa; we must use lock here because += is not atomic We don't do much with this value, but the idea is that one could combine the values  with a desired logic. Here we only use it to collect an overall status of the parallel computation. get methods" isLeaf="false" isRoot="false" name="add" visibility="public" isQuery="false" xmi.id="tcJ4qQMl4Rpb" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="qRgmySbGQ1ow" type="26VR1YNDt0V4"/>
          <UML:Parameter name="pid" visibility="private" xmi.id="JyMRqpCDeQHj" value="" type="26VR1YNDt0V4" isSpecification="false"/>
          <UML:Parameter name="value" visibility="private" xmi.id="cxDXfNuclU0F" value="" type="26VR1YNDt0V4" isSpecification="false"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the internal status.&#xa;        &#xa;        :return: True if the counter is empty.&#xa;" isLeaf="false" isRoot="false" name="get_value" visibility="public" isQuery="false" xmi.id="ppiJhzWrP0NN" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="60BGjTXD1q2k" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isAbstract="false" comment="        Return the counter&#xa;        &#xa;        :return: the number of running processes.&#xa;" isLeaf="false" isRoot="false" name="get_count" visibility="public" isQuery="false" xmi.id="f1Y2p8vknaYn" isSpecification="false">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="hRJ622DkDR9C" type="26VR1YNDt0V4"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showpubliconly="0" canvaswidth="2620.29" font="Noto Sans,11,-1,5,75,1,0,0,0,0" showattribassocs="1" snapgrid="0" showstereotype="1" usefillcolor="1" showops="1" snapcsgrid="0" linewidth="0" linecolor="#000000" backgroundcolor="#ffffff" showatts="1" type="1" name="pipeline_class_diagram" textcolor="#000000" xmi.id="85tZjnE77he7" showattsig="1" showpackage="1" zoom="62" showscope="1" documentation="" snapy="25" griddotcolor="#000000" showgrid="0" showopsig="1" fillcolor="#ffffff" canvasheight="1376.04" isopen="1" localid="-1" snapx="25">
        <widgets>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="-304.5" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="HejAXrTdRO2l" showpackage="1" x="70.8249" showattributes="1" showattsigs="601" width="182" showscope="1" height="250" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="TFtYljY3eO9d"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="201.129" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="PWolCT6CL3lF" showpackage="1" x="-222.442" showattributes="1" showattsigs="601" width="145" showscope="1" height="150" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="5I2wZMC61YTm"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="420.853" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="Aabs1z0xVH4B" showpackage="1" x="-22.523" showattributes="1" showattsigs="601" width="145" showscope="1" height="150" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="1itZylOP1YsY"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="416.935" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="ckQA0Hz9reKz" showpackage="1" x="212.903" showattributes="1" showattsigs="601" width="145" showscope="1" height="150" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="7sj0nsF7DWQt"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="95.2765" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="VGP8jIfrAXll" showpackage="1" x="389.343" showattributes="1" showattsigs="601" width="145" showscope="1" height="150" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="jRYyTvj3TImt"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="8.29493" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="jCnt0lv3HoxN" showpackage="1" x="-281.74" showattributes="1" showattsigs="601" width="79" showscope="1" height="70" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="wzHUZVW5hFvW"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget usesdiagramusefillcolor="0" widgetaid="PWolCT6CL3lF" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="#ffff00" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="0" xmi.id="wQsuGew4wVNC" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="HejAXrTdRO2l" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="201.129" startx="-77.4424"/>
           <endpoint endy="-54.5" endx="70.8249"/>
          </linepath>
         </assocwidget>
         <assocwidget usesdiagramusefillcolor="105" widgetaid="Aabs1z0xVH4B" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="none" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="108" xmi.id="6uRqRSH9JRAe" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="HejAXrTdRO2l" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="420.853" startx="122.477"/>
           <endpoint endy="-54.5" endx="122.477"/>
          </linepath>
         </assocwidget>
         <assocwidget usesdiagramusefillcolor="16" widgetaid="ckQA0Hz9reKz" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="#ffff00" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="0" xmi.id="ZApCFQAlkRgI" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="HejAXrTdRO2l" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="416.935" startx="212.903"/>
           <endpoint endy="-54.5" endx="212.903"/>
          </linepath>
         </assocwidget>
         <assocwidget usesdiagramusefillcolor="0" widgetaid="VGP8jIfrAXll" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="#ffff00" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="0" xmi.id="iz23BtiHWfyy" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="HejAXrTdRO2l" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="95.2765" startx="389.343"/>
           <endpoint endy="-54.5" endx="252.825"/>
          </linepath>
         </assocwidget>
         <assocwidget usesdiagramusefillcolor="0" widgetaid="jCnt0lv3HoxN" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="#ffff00" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="0" xmi.id="5rtPebSy47H8" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="HejAXrTdRO2l" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="8.29493" startx="-202.74"/>
           <endpoint endy="-54.5" endx="70.8249"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
       <diagram showpubliconly="0" canvaswidth="1922" font="Noto Sans,11,-1,5,75,1,0,0,0,0" showattribassocs="1" snapgrid="0" showstereotype="1" usefillcolor="1" showops="1" snapcsgrid="0" linewidth="0" linecolor="#000000" backgroundcolor="#ffffff" showatts="1" type="1" name="simulator_class_diagram" textcolor="#000000" xmi.id="aeUMDhvgDifa" showattsig="1" showpackage="1" zoom="62" showscope="1" documentation="" snapy="25" griddotcolor="#000000" showgrid="0" showopsig="1" fillcolor="#ffffff" canvasheight="1210.97" isopen="1" localid="-1" snapx="25">
        <widgets>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="-728.71" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="YxoHtf14TOXy" showpackage="1" x="-404.258" showattributes="1" showattsigs="601" width="79" showscope="1" height="150" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="XkO4JtHKkQLC"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="-375.806" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="AXjr1rS6ROxT" showpackage="1" x="-361.29" showattributes="1" showattsigs="601" width="58" showscope="1" height="40" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="DmkL023S0zPn"/>
         <classwidget showpubliconly="0" usesdiagramusefillcolor="0" font="Noto Sans,11,-1,5,50,0,0,0,0,0" showstereotype="1" y="-401.613" usefillcolor="1" linewidth="0" linecolor="#000000" isinstance="0" textcolor="#000000" showopsigs="600" xmi.id="vyJVJIk5gdEi" showpackage="1" x="-269.355" showattributes="1" showattsigs="601" width="180" showscope="1" height="70" showoperations="1" fillcolor="#ffffff" usesdiagramfillcolor="0" localid="aPnnLATJXBGO"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget usesdiagramusefillcolor="0" widgetaid="AXjr1rS6ROxT" seqnum="" indexb="1" font="Noto Sans,11,-1,5,75,1,0,0,0,0" linecolor="#000000" fillcolor="#ffff00" totalcountb="2" usefillcolor="1" usesdiagramfillcolor="0" xmi.id="w3t7gO7bii9Y" indexa="1" textcolor="none" linewidth="0" type="500" widgetbid="YxoHtf14TOXy" totalcounta="2">
          <linepath layout="Polyline">
           <startpoint starty="-375.806" startx="-361.29"/>
           <endpoint endy="-578.71" endx="-361.29"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model isAbstract="false" isLeaf="false" isRoot="false" name="Use Case View" visibility="public" xmi.id="Use Case View" namespace="m1" isSpecification="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isAbstract="false" isLeaf="false" isRoot="false" name="Component View" visibility="public" xmi.id="Component View" namespace="m1" isSpecification="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isAbstract="false" isLeaf="false" isRoot="false" name="Deployment View" visibility="public" xmi.id="Deployment View" namespace="m1" isSpecification="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model isAbstract="false" isLeaf="false" isRoot="false" name="Entity Relationship Model" visibility="public" xmi.id="Entity Relationship Model" namespace="m1" isSpecification="false">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings documentation="" uniqueid="aPnnLATJXBGO" viewid="85tZjnE77he7"/>
  <listview>
   <listitem id="Views" open="1" type="800">
    <listitem id="Component View" open="1" type="821"/>
    <listitem id="Deployment View" open="1" type="827"/>
    <listitem id="Entity Relationship Model" open="1" type="836"/>
    <listitem id="Logical View" open="1" type="801">
     <listitem id="AXjr1rS6ROxT" open="0" type="813"/>
     <listitem id="vyJVJIk5gdEi" open="0" type="813">
      <listitem id="gsoR4WIj2e6O" open="0" type="815"/>
      <listitem id="0ekub6ZWm7qH" open="0" type="815"/>
     </listitem>
     <listitem id="Datatypes" open="0" type="830">
      <listitem id="CG7vTwlfx02Y" open="1" type="829"/>
      <listitem id="aXRcBGSbP34j" open="1" type="829"/>
      <listitem id="GnkIthw9jTvy" open="1" type="829"/>
      <listitem id="k7pHRtTMvYWQ" open="1" type="829"/>
      <listitem id="IPoQpQ5q6XcS" open="1" type="829"/>
      <listitem id="SHAvtzAsNjWw" open="1" type="829"/>
      <listitem id="HgjHzSPNYaTK" open="1" type="829"/>
      <listitem id="9mrYvUnYZbVE" open="1" type="829"/>
      <listitem id="fixqMmbXj5CX" open="1" type="829"/>
      <listitem id="C0yEYnO7G4p3" open="1" type="829"/>
      <listitem id="PY5WMEKMCY5G" open="1" type="829"/>
      <listitem id="26VR1YNDt0V4" open="1" type="829"/>
      <listitem id="2oa8OPI7TbnB" open="1" type="829"/>
      <listitem id="9s0f2WPQKO3r" open="1" type="829"/>
      <listitem id="A4oqlN7I5V2o" open="1" type="829"/>
      <listitem id="w5MnJ7vfsm3H" open="1" type="829"/>
     </listitem>
     <listitem id="8UBrhKppPK5E" open="0" type="813"/>
     <listitem id="QZYfNhxSHJy5" open="0" type="813">
      <listitem id="hga99qKY5ZiO" open="0" type="815"/>
      <listitem id="tcJ4qQMl4Rpb" open="0" type="815"/>
      <listitem id="f1Y2p8vknaYn" open="0" type="815"/>
      <listitem id="ppiJhzWrP0NN" open="0" type="815"/>
     </listitem>
     <listitem id="jCnt0lv3HoxN" open="0" type="813">
      <listitem id="BpouoKeSiMpV" open="0" type="815"/>
      <listitem id="vdAC0eIW7WNF" open="0" type="815"/>
     </listitem>
     <listitem id="PWolCT6CL3lF" open="0" type="813">
      <listitem id="8BYugDmsNYcR" open="0" type="815"/>
      <listitem id="vCngjyFL3rii" open="0" type="815"/>
      <listitem id="gzhSMu4mCgZI" open="0" type="815"/>
      <listitem id="AYOYAJx85kQq" open="0" type="815"/>
      <listitem id="TLWKPjVkXN2s" open="0" type="815"/>
      <listitem id="1wR0AxpgncRI" open="0" type="815"/>
     </listitem>
     <listitem id="Aabs1z0xVH4B" open="0" type="813">
      <listitem id="kIUQeOAyS9oF" open="0" type="815"/>
      <listitem id="m8wmv7wBMhMr" open="0" type="815"/>
      <listitem id="OW9GT8xjI07w" open="0" type="815"/>
      <listitem id="hN1K3pT1DBgC" open="0" type="815"/>
      <listitem id="jBKZclsu8IiZ" open="0" type="815"/>
      <listitem id="x4MzA2x1pZ7T" open="0" type="815"/>
     </listitem>
     <listitem id="ckQA0Hz9reKz" open="0" type="813">
      <listitem id="wtl6jIf3p8Rd" open="0" type="815"/>
      <listitem id="cimUKhypPTwU" open="0" type="815"/>
      <listitem id="yWXeQajVFRrE" open="0" type="815"/>
      <listitem id="eXKG3Kzj7gYN" open="0" type="815"/>
      <listitem id="kTrsYnFrTth3" open="0" type="815"/>
      <listitem id="OxmHk4QxIZGU" open="0" type="815"/>
     </listitem>
     <listitem id="HejAXrTdRO2l" open="0" type="813">
      <listitem id="InXqo2Y0JQNP" open="0" type="815"/>
      <listitem id="j5LPRFZRftSU" open="0" type="815"/>
      <listitem id="xbgVWNq1U2qp" open="0" type="815"/>
      <listitem id="w0qeJ18g3YVC" open="0" type="815"/>
      <listitem id="ccSByjPcUM4M" open="0" type="815"/>
      <listitem id="Vnq1QRD75umr" open="0" type="815"/>
      <listitem id="M0rfZgQaF72o" open="0" type="815"/>
      <listitem id="nUjRLv1xHUEj" open="0" type="815"/>
      <listitem id="Ve0H9g7SkOhB" open="0" type="815"/>
      <listitem id="KJp81PtQ2p7O" open="0" type="815"/>
      <listitem id="2hBAsKYXzzCb" open="0" type="815"/>
     </listitem>
     <listitem id="85tZjnE77he7" label="pipeline_class_diagram" open="0" type="807"/>
     <listitem id="BM7TtfkQaT43" open="0" type="813">
      <listitem id="VbKcXJUTs2ON" open="0" type="815"/>
      <listitem id="8o3eTnOBjdcW" open="0" type="815"/>
      <listitem id="dleiIHp6HCmO" open="0" type="815"/>
      <listitem id="S1CDUGbGiXlK" open="0" type="815"/>
      <listitem id="QsdbPLKK3tkC" open="0" type="815"/>
      <listitem id="1OVLAW7LZ8SK" open="0" type="815"/>
      <listitem id="Gg6RpWIj7I7U" open="0" type="815"/>
      <listitem id="WyImXPbC3Jhl" open="0" type="815"/>
      <listitem id="ShGwazwEKsij" open="0" type="815"/>
      <listitem id="jDUUZcU7MqGN" open="0" type="815"/>
      <listitem id="nIckw73ynV6j" open="0" type="815"/>
      <listitem id="wZIusMEd2ckh" open="0" type="815"/>
      <listitem id="2RELhggJrJz5" open="0" type="815"/>
      <listitem id="krF3rbUBRbNO" open="0" type="815"/>
      <listitem id="VyTkC2mdLzVy" open="0" type="815"/>
      <listitem id="l9PJa3VOIkAd" open="0" type="815"/>
     </listitem>
     <listitem id="JhFHNr4GVPjh" open="0" type="813">
      <listitem id="JCBArQsi57tU" open="0" type="815"/>
      <listitem id="5cOYaqmVVHZx" open="0" type="815"/>
      <listitem id="HdLMfNqtaAmY" open="0" type="815"/>
      <listitem id="hr2RAQOplXF5" open="0" type="815"/>
      <listitem id="JCgIPLLPFLzT" open="0" type="815"/>
      <listitem id="l8ERPiZCH6YG" open="0" type="815"/>
     </listitem>
     <listitem id="VGP8jIfrAXll" open="0" type="813">
      <listitem id="5CCtYMA7dxqg" open="0" type="815"/>
      <listitem id="226wwjZLn34t" open="0" type="815"/>
      <listitem id="xFHRwDpD1gpY" open="0" type="815"/>
      <listitem id="VC6jtTzksHhI" open="0" type="815"/>
      <listitem id="ZeUFGBFEGVgG" open="0" type="815"/>
      <listitem id="AQVGGe5X6xJy" open="0" type="815"/>
     </listitem>
     <listitem id="YxoHtf14TOXy" open="0" type="813">
      <listitem id="cI64YFuo18Gp" open="0" type="815"/>
      <listitem id="6OpU6RYYG7yd" open="0" type="815"/>
      <listitem id="hGieeluJYKe5" open="0" type="815"/>
      <listitem id="IOFH2EwR0pMg" open="0" type="815"/>
      <listitem id="C9G1CWlbFo0F" open="0" type="815"/>
      <listitem id="F5VQxoVFkvDH" open="0" type="815"/>
     </listitem>
     <listitem id="aeUMDhvgDifa" label="simulator_class_diagram" open="0" type="807"/>
     <listitem id="U7j10721gOHL" open="0" type="813">
      <listitem id="FFHSQIX75Kfl" open="0" type="815"/>
     </listitem>
    </listitem>
    <listitem id="Use Case View" open="1" type="802"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python">
    <sourcecode id="FFHSQIX75Kfl" value="self.msg=msg&#xa;"/>
    <sourcecode id="BpouoKeSiMpV" value="Pipeline.__init__(self,data_folder,models_folder,working_folder)&#xa;"/>
    <sourcecode id="vdAC0eIW7WNF" value="if not os.path.exists(project_name):&#xa;  os.mkdir(project_name)&#xa;&#xa;if not os.path.exists(os.path.join(project_name,self.get_data_folder())):&#xa;  os.mkdir(os.path.join(project_name,self.get_data_folder()))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,self.get_models_folder())):&#xa;  os.mkdir(os.path.join(project_name,self.get_models_folder()))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,self.get_working_folder())):&#xa;  os.mkdir(os.path.join(project_name,self.get_working_folder()))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,self.get_models_folder(),'previous_models')):&#xa;  os.mkdir(os.path.join(project_name,self.get_models_folder(),'previous_models'))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,'Manuscript')):&#xa;  os.mkdir(os.path.join(project_name,'Manuscript'))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,'Manuscript','figures')):&#xa;  os.mkdir(os.path.join(project_name,'Manuscript','figures'))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,'SBGN_graphic_models')):&#xa;  os.mkdir(os.path.join(project_name,'SBGN_graphic_models'))&#xa;&#xa;if not os.path.exists(os.path.join(project_name,'SBGN_graphic_models','previous_models')):&#xa;  os.mkdir(os.path.join(project_name,'SBGN_graphic_models','previous_models'))&#xa;&#xa;logger.info(&quot;Project &quot;+project_name+&quot; created.&quot;)&#xa;return True"/>
    <sourcecode id="8BYugDmsNYcR" value="__doc__=Pipeline.__init__.__doc__&#xa;Pipeline.__init__(self,data_folder,models_folder,working_folder,sim_data_folder,sim_plots_folder)&#xa;self.__updated_models_folder='updated_models'&#xa;"/>
    <sourcecode id="1wR0AxpgncRI" value="__doc__=Pipeline.run.__doc__&#xa;logger.info(&quot;Reading file &quot;+config_file+&quot; : \n&quot;)&#xa;try:&#xa;  (generate_data,analyse_data,generate_report,&#xa;  generate_tarball,project_dir,simulator,model,cluster,pp_cpus,round,runs,best_fits_percent,data_point_num,plot_2d_66cl_corr,plot_2d_95cl_corr,plot_2d_99cl_corr,logspace,scientific_notation)=self.config_parser(config_file,&quot;param_estim&quot;)&#xa;except Exception as e:&#xa;  logger.error(e.message)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;runs=int(runs)&#xa;pp_cpus=int(pp_cpus)&#xa;best_fits_percent=int(best_fits_percent)&#xa;data_point_num=int(data_point_num)&#xa;models_dir=os.path.join(project_dir,self.get_models_folder())&#xa;working_dir=os.path.join(project_dir,self.get_working_folder())&#xa;output_folder=model[:-4]+&quot;_round&quot;+round&#xa;outputdir=os.path.join(working_dir,output_folder)&#xa;fileout_final_estims=&quot;final_estim_collection.csv&quot;&#xa;fileout_all_estims=&quot;all_estim_collection.csv&quot;&#xa;fileout_param_estim_details=&quot;param_estim_details.csv&quot;&#xa;fileout_param_estim_summary=&quot;param_estim_summary.csv&quot;&#xa;start=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Parameter estimation for model &quot;+model)&#xa;logger.info(&quot;;logger.info(&quot;&quot;)&#xa;if not os.path.exists(outputdir):&#xa;  os.makedirs(outputdir)&#xa;&#xa;if generate_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Generate data:&quot;)&#xa;  logger.info(&quot;;status=ParEst.generate_data(simulator,&#xa;  model,models_dir,cluster,pp_cpus,runs,outputdir,os.path.join(outputdir,self.get_sim_data_folder()),os.path.join(outputdir,self.__updated_models_folder))if not status:&#xa;    return False&#xa;&#xa;&#xa;if analyse_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Analyse data:&quot;)&#xa;  logger.info(&quot;;status=ParEst.analyse_data(model[:-4],&#xa;  os.path.join(outputdir,self.get_sim_data_folder()),outputdir,fileout_final_estims,fileout_all_estims,fileout_param_estim_details,fileout_param_estim_summary,os.path.join(outputdir,self.get_sim_plots_folder()),best_fits_percent,data_point_num,plot_2d_66cl_corr,plot_2d_95cl_corr,plot_2d_99cl_corr,logspace,scientific_notation)if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_report:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Report generation:&quot;)&#xa;  logger.info(&quot;;status=ParEst.generate_report(model[:-4],&#xa;  outputdir,self.get_sim_plots_folder())if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_tarball:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Store the fits sequences in a tarball:&quot;)&#xa;  logger.info(&quot;;orig_wd=os.getcwd()&#xa;  os.chdir(working_dir)&#xa;  with tarfile.open(output_folder+&quot;.tgz&quot;,&quot;w:gz&quot;)as tar:&#xa;    tar.add(output_folder,arcname=os.path.basename(output_folder))&#xa;&#xa;  os.chdir(orig_wd)&#xa;&#xa;end=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n\nPipeline elapsed time (using Python datetime): &quot;+str(end-start))&#xa;if os.path.isfile(os.path.join(outputdir,fileout_final_estims))and\&#xa;os.path.isfile(os.path.join(outputdir,fileout_all_estims))and\len(glob.glob(os.path.join(outputdir,'*'+model[:-4]+'*.pdf')))==1:&#xa;  return True&#xa;&#xa;return False&#xa;"/>
    <sourcecode id="gzhSMu4mCgZI" value="if int(pp_cpus)&lt;1:&#xa;  logger.error(&quot;variable pp_cpus must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(nfits)&lt;1:&#xa;  logger.error(&quot;variable nfits must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if not os.path.isfile(os.path.join(inputdir,model)):&#xa;  logger.error(os.path.join(inputdir,model)+&quot; does not exist.&quot;)&#xa;  return False&#xa;&#xa;refresh(sim_data_dir,model[:-4])&#xa;refresh(updated_models_dir,model[:-4])&#xa;try:&#xa;  sim=cls.get_simul_obj(simulator)&#xa;  sim.pe(model,inputdir,cluster_type,pp_cpus,nfits,outputdir,&#xa;  sim_data_dir,updated_models_dir)&#xa;except Exception as e:&#xa;  logger.error(&quot;simulator: &quot;+simulator+&quot; not found.&quot;)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;return True&#xa;"/>
    <sourcecode id="vCngjyFL3rii" value="if not os.path.exists(inputdir)or not os.listdir(inputdir):&#xa;  logger.error(&quot;inputdir &quot;+inputdir+&quot; does not exist or is empty. Generate some data first.&quot;)&#xa;  return False&#xa;&#xa;if int(best_fits_percent)&lt;1 or int(best_fits_percent)>100:&#xa;  logger.error(&quot;variable `best_fits_percent` must be in (0, 100]. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(data_point_num)&lt;1:&#xa;  logger.error(&quot;variable `data_point_num` must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;refresh(sim_plots_dir,model[:-4])&#xa;logger.info(&quot;Collect results:&quot;)&#xa;get_best_fits(inputdir,outputdir,fileout_final_estims)&#xa;get_all_fits(inputdir,outputdir,fileout_all_estims)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Plot results:&quot;)&#xa;logger.info(&quot;\n&quot;)&#xa;process=subprocess.Popen(['Rscript',&#xa;os.path.join(os.path.dirname(__file__),'main_final_fits_analysis.r'),model,os.path.join(outputdir,fileout_final_estims),sim_plots_dir,str(best_fits_percent),str(logspace),str(scientific_notation)])process.wait()&#xa;process=subprocess.Popen(&#xa;['Rscript',os.path.join(os.path.dirname(__file__),'main_all_fits_analysis.r'),model,os.path.join(outputdir,fileout_all_estims),sim_plots_dir,str(data_point_num),os.path.join(outputdir,fileout_param_estim_details),os.path.join(outputdir,fileout_param_estim_summary),str(plot_2d_66cl_corr),str(plot_2d_95cl_corr),str(plot_2d_99cl_corr),str(logspace),str(scientific_notation)])process.wait()&#xa;return True&#xa;"/>
    <sourcecode id="AYOYAJx85kQq" value="if not os.path.exists(os.path.join(outputdir,sim_plots_folder)):&#xa;  logger.error(&#xa;  &quot;input_dir &quot;+os.path.join(outputdir,sim_plots_folder)+&quot; does not exist. Analyse the data first.&quot;)return False&#xa;&#xa;logger.info(&quot;Generating LaTeX report&quot;)&#xa;filename_prefix=&quot;report__param_estim_&quot;&#xa;latex_report_pe(outputdir,sim_plots_folder,model,filename_prefix)&#xa;logger.info(&quot;Generating PDF report&quot;)&#xa;pdf_report(outputdir,filename_prefix+model+&quot;.tex&quot;)&#xa;return True&#xa;"/>
    <sourcecode id="TLWKPjVkXN2s" value="__doc__=Pipeline.read_config.__doc__&#xa;(generate_data,analyse_data,generate_report,&#xa;project_dir,model)=self.read_common_config(lines)simulator='Copasi'&#xa;generate_tarball=False&#xa;cluster='pp'&#xa;pp_cpus=1&#xa;round=1&#xa;runs=25&#xa;best_fits_percent=100&#xa;data_point_num=10&#xa;plot_2d_66cl_corr=False&#xa;plot_2d_95cl_corr=False&#xa;plot_2d_99cl_corr=False&#xa;logspace=True&#xa;scientific_notation=True&#xa;for line in lines:&#xa;  logger.info(line)&#xa;  if line[0]==&quot;simulator&quot;:&#xa;    simulator=line[1]&#xa;&#xa;  elif line[0]==&quot;generate_tarball&quot;:&#xa;    generate_tarball=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;cluster&quot;:&#xa;    cluster=line[1]&#xa;&#xa;  elif line[0]==&quot;round&quot;:&#xa;    round=line[1]&#xa;&#xa;  elif line[0]==&quot;runs&quot;:&#xa;    runs=line[1]&#xa;&#xa;  elif line[0]==&quot;pp_cpus&quot;:&#xa;    pp_cpus=line[1]&#xa;&#xa;  elif line[0]==&quot;best_fits_percent&quot;:&#xa;    best_fits_percent=line[1]&#xa;&#xa;  elif line[0]==&quot;data_point_num&quot;:&#xa;    data_point_num=line[1]&#xa;&#xa;  elif line[0]==&quot;plot_2d_66cl_corr&quot;:&#xa;    plot_2d_66cl_corr=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;plot_2d_95cl_corr&quot;:&#xa;    plot_2d_95cl_corr=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;plot_2d_99cl_corr&quot;:&#xa;    plot_2d_99cl_corr=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;logspace&quot;:&#xa;    logspace=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;scientific_notation&quot;:&#xa;    scientific_notation=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;&#xa;return(generate_data,analyse_data,generate_report,generate_tarball,&#xa;project_dir,simulator,model,cluster,pp_cpus,round,runs,best_fits_percent,data_point_num,plot_2d_66cl_corr,plot_2d_95cl_corr,plot_2d_99cl_corr,logspace,scientific_notation"/>
    <sourcecode id="kIUQeOAyS9oF" value="__doc__=Pipeline.__init__.__doc__&#xa;Pipeline.__init__(self,data_folder,models_folder,working_folder,sim_data_folder,sim_plots_folder)&#xa;"/>
    <sourcecode id="x4MzA2x1pZ7T" value="__doc__=Pipeline.run.__doc__&#xa;logger.info(&quot;Reading file &quot;+config_file+&quot; : \n&quot;)&#xa;try:&#xa;  (generate_data,analyse_data,generate_report,&#xa;  project_dir,simulator,model,scanned_par,simulate__intervals,single_param_scan_simulations_number,single_param_scan_percent_levels,single_param_scan_knock_down_only,levels_number,min_level,max_level,homogeneous_lines,xaxis_label,yaxis_label)=self.config_parser(config_file,&quot;single_param_scan&quot;)&#xa;except Exception as e:&#xa;  logger.error(e.message)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;models_dir=os.path.join(project_dir,self.get_models_folder())&#xa;outputdir=os.path.join(project_dir,self.get_working_folder(),model[:-4])&#xa;start=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Processing model &quot;+model)&#xa;logger.info(&quot;;logger.info(&quot;&quot;)&#xa;if not os.path.exists(outputdir):&#xa;  os.makedirs(outputdir)&#xa;&#xa;if generate_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data generation:&quot;)&#xa;  logger.info(&quot;;status=ParScan1.generate_data(simulator,&#xa;  model,scanned_par,single_param_scan_simulations_number,simulate__intervals,levels_number,models_dir,os.path.join(outputdir,self.get_sim_data_folder()))if not status:&#xa;    return False&#xa;&#xa;&#xa;if analyse_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data analysis:&quot;)&#xa;  logger.info(&quot;;status=ParScan1.analyse_data(model[:-4],scanned_par,single_param_scan_knock_down_only,outputdir,&#xa;  self.get_sim_data_folder(),self.get_sim_plots_folder(),single_param_scan_simulations_number,single_param_scan_percent_levels,min_level,max_level,levels_number,homogeneous_lines,xaxis_label,yaxis_label)if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_report:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Report generation:&quot;)&#xa;  logger.info(&quot;;status=ParScan1.generate_report(model[:-4],scanned_par,outputdir,self.get_sim_plots_folder())&#xa;  if not status:&#xa;    return False&#xa;&#xa;&#xa;end=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n\nPipeline elapsed time (using Python datetime): &quot;+str(end-start))&#xa;if(len(glob.glob(os.path.join(outputdir,&quot;*&quot;+model[:-4]+&quot;*.pdf&quot;)))==1 and&#xa;len(glob.glob(os.path.join(outputdir,self.get_sim_plots_folder(),model[:-4]+&quot;*.png&quot;)))>0):&#xa;  return True&#xa;&#xa;return False&#xa;"/>
    <sourcecode id="OW9GT8xjI07w" value="if not os.path.isfile(os.path.join(inputdir,model)):&#xa;  logger.error(os.path.join(inputdir,model)+&quot; does not exist.&quot;)&#xa;  return False&#xa;&#xa;if int(sim_number)&lt;1:&#xa;  logger.error(&quot;variable sim_number must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(simulate_intervals)&lt;1:&#xa;  logger.error(&quot;variable simulate_intervals must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(single_param_scan_intervals)&lt;1:&#xa;  logger.error(&quot;variable single_param_scan_intervals must be greater than 0. Please, &quot;&#xa;  &quot;check your configuration file.&quot;)return False&#xa;&#xa;refresh(outputdir,model[:-4])&#xa;logger.info(&quot;Simulating Model: &quot;+model)&#xa;try:&#xa;  sim=cls.get_simul_obj(simulator)&#xa;  sim.ps1(model,scanned_par,sim_number,simulate_intervals,&#xa;  single_param_scan_intervals,inputdir,outputdir)&#xa;except Exception as e:&#xa;  logger.error(&quot;simulator: &quot;+simulator+&quot; not found.&quot;)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;return True&#xa;"/>
    <sourcecode id="m8wmv7wBMhMr" value="if not os.path.exists(os.path.join(outputdir,sim_data_folder)):&#xa;  logger.error(&#xa;  &quot;input_dir &quot;+os.path.join(outputdir,sim_data_folder)+&quot; does not exist. Generate some data first.&quot;)return False&#xa;&#xa;if float(min_level)&lt;0:&#xa;  logger.error(&quot;min_level MUST BE non negative. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if float(max_level)&lt;0:&#xa;  logger.error(&quot;max_level MUST BE non negative. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if float(max_level)&lt;=float(min_level):&#xa;  logger.error(&quot;min_level MUST BE lower than max_level. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(simulations_number)&lt;1:&#xa;  logger.error(&quot;variable simulations_number must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if int(levels_number)&lt;1:&#xa;  logger.error(&quot;variable levels_number must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if percent_levels and float(max_level)&lt;100:&#xa;  logger.error(&quot;max_level cannot be less than 100 (=ctrl) if option `percent_levels` is True. &quot;&#xa;  &quot;Please, check your configuration file.&quot;)return False&#xa;&#xa;refresh(os.path.join(outputdir,sim_plots_folder),model[:-4])&#xa;process=subprocess.Popen(['Rscript',os.path.join(os.path.dirname(__file__),&#xa;'parscan1_analyse_data.r'),model,scanned_par,str(knock_down_only),outputdir,sim_data_folder,sim_plots_folder,simulations_number,str(percent_levels),str(min_level),str(max_level),str(levels_number),str(homogeneous_lines),xaxis_label,yaxis_label])process.wait()&#xa;return True&#xa;"/>
    <sourcecode id="hN1K3pT1DBgC" value="if not os.path.exists(os.path.join(outputdir,sim_plots_folder)):&#xa;  logger.error(&#xa;  &quot;input_dir &quot;+os.path.join(outputdir,sim_plots_folder)+&quot; does not exist. Analyse the data first.&quot;)return False&#xa;&#xa;logger.info(&quot;Generating LaTeX report&quot;)&#xa;logger.info(model)&#xa;filename_prefix=&quot;report__single_param_scan_&quot;&#xa;latex_report_sps(outputdir,sim_plots_folder,filename_prefix,&#xa;model,scanned_par)logger.info(&quot;Generating PDF report&quot;)&#xa;pdf_report(outputdir,filename_prefix+model+&quot;.tex&quot;)&#xa;return True&#xa;"/>
    <sourcecode id="jBKZclsu8IiZ" value="__doc__=Pipeline.read_config.__doc__&#xa;(generate_data,analyse_data,generate_report,&#xa;project_dir,model)=self.read_common_config(lines)simulator='Copasi'&#xa;scanned_par=&quot;&quot;&#xa;simulate__intervals=100&#xa;xaxis_label=&quot;Time [min]&quot;&#xa;yaxis_label=&quot;Level [a.u.]&quot;&#xa;single_param_scan_simulations_number=1&#xa;single_param_scan_percent_levels=False&#xa;single_param_scan_knock_down_only=True&#xa;levels_number=10&#xa;min_level=0&#xa;max_level=250&#xa;homogeneous_lines=False&#xa;for line in lines:&#xa;  logger.info(line)&#xa;  if line[0]==&quot;simulator&quot;:&#xa;    simulator=line[1]&#xa;&#xa;  elif line[0]==&quot;scanned_par&quot;:&#xa;    scanned_par=line[1]&#xa;&#xa;  elif line[0]==&quot;simulate__intervals&quot;:&#xa;    simulate__intervals=line[1]&#xa;&#xa;  elif line[0]==&quot;single_param_scan_simulations_number&quot;:&#xa;    single_param_scan_simulations_number=line[1]&#xa;&#xa;  elif line[0]==&quot;single_param_scan_percent_levels&quot;:&#xa;    single_param_scan_percent_levels=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;single_param_scan_knock_down_only&quot;:&#xa;    single_param_scan_knock_down_only=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;min_level&quot;:&#xa;    min_level=line[1]&#xa;&#xa;  elif line[0]==&quot;max_level&quot;:&#xa;    max_level=line[1]&#xa;&#xa;  elif line[0]==&quot;levels_number&quot;:&#xa;    levels_number=line[1]&#xa;&#xa;  elif line[0]==&quot;homogeneous_lines&quot;:&#xa;    homogeneous_lines=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;xaxis_label&quot;:&#xa;    xaxis_label=line[1]&#xa;&#xa;  elif line[0]==&quot;yaxis_label&quot;:&#xa;    yaxis_label=line[1]&#xa;&#xa;&#xa;return(generate_data,analyse_data,generate_report,&#xa;project_dir,simulator,model,scanned_par,simulate__intervals,single_param_scan_simulations_number,single_param_scan_percent_levels,single_param_scan_knock_down_only,levels_number,min_level,max_level,homogeneous_lines,xaxis_label,yaxis_label"/>
    <sourcecode id="wtl6jIf3p8Rd" value="__doc__=Pipeline.__init__.__doc__&#xa;Pipeline.__init__(self,data_folder,models_folder,working_folder,sim_data_folder,sim_plots_folder)&#xa;"/>
    <sourcecode id="OxmHk4QxIZGU" value="__doc__=Pipeline.run.__doc__&#xa;logger.info(&quot;Reading file &quot;+config_file+&quot; : \n&quot;)&#xa;try:&#xa;  (generate_data,analyse_data,generate_report,&#xa;  project_dir,simulator,model,scanned_par1,scanned_par2,sim_length)=self.config_parser(config_file,&quot;double_param_scan&quot;)&#xa;except Exception as e:&#xa;  logger.error(e.message)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;sim_length=int(sim_length)&#xa;models_dir=os.path.join(project_dir,self.get_models_folder())&#xa;outputdir=os.path.join(project_dir,self.get_working_folder(),model[:-4])&#xa;start=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Processing model &quot;+model)&#xa;logger.info(&quot;;logger.info(&quot;&quot;)&#xa;if not os.path.exists(outputdir):&#xa;  os.makedirs(outputdir)&#xa;&#xa;if generate_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data generation:&quot;)&#xa;  logger.info(&quot;;status=ParScan2.generate_data(simulator,&#xa;  model,sim_length,models_dir,os.path.join(outputdir,self.get_sim_data_folder()))if not status:&#xa;    return False&#xa;&#xa;&#xa;if analyse_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data analysis:&quot;)&#xa;  logger.info(&quot;;status=ParScan2.analyse_data(model[:-4],&#xa;  scanned_par1,scanned_par2,os.path.join(outputdir,self.get_sim_data_folder()),os.path.join(outputdir,self.get_sim_plots_folder()))if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_report:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Report generation:&quot;)&#xa;  logger.info(&quot;;status=ParScan2.generate_report(model[:-4],&#xa;  scanned_par1,scanned_par2,outputdir,self.get_sim_plots_folder())if not status:&#xa;    return False&#xa;&#xa;&#xa;end=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n\nPipeline elapsed time (using Python datetime): &quot;+str(end-start))&#xa;if len(glob.glob(os.path.join(outputdir,&quot;*&quot;+model[:-4]+&quot;*.pdf&quot;)))==1 and\&#xa;len(glob.glob(os.path.join(outputdir,self.get_sim_plots_folder(),model[:-4]+&quot;*.png&quot;)))>0:&#xa;  return True&#xa;&#xa;return False&#xa;"/>
    <sourcecode id="yWXeQajVFRrE" value="if not os.path.isfile(os.path.join(inputdir,model)):&#xa;  logger.error(os.path.join(inputdir,model)+&quot; does not exist.&quot;)&#xa;  return False&#xa;&#xa;if int(sim_length)&lt;1:&#xa;  logger.error(&quot;variable sim_length must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;refresh(outputdir,model[:-4])&#xa;logger.info(&quot;Simulating Model: &quot;+model)&#xa;try:&#xa;  sim=cls.get_simul_obj(simulator)&#xa;  sim.ps2(model,sim_length,inputdir,outputdir)&#xa;&#xa;except Exception as e:&#xa;  logger.error(&quot;simulator: &quot;+simulator+&quot; not found.&quot;)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;return True&#xa;"/>
    <sourcecode id="cimUKhypPTwU" value="if not os.path.exists(inputdir):&#xa;  logger.error(&quot;input_dir &quot;+inputdir+&quot; does not exist. Generate some data first.&quot;)&#xa;  return False&#xa;&#xa;refresh(outputdir,model[:-4])&#xa;process=subprocess.Popen(['Rscript',os.path.join(os.path.dirname(__file__),&#xa;'parscan2_analyse_data.r'),model,scanned_par1,scanned_par2,inputdir,outputdir])process.wait()&#xa;return True&#xa;"/>
    <sourcecode id="eXKG3Kzj7gYN" value="if not os.path.exists(os.path.join(outputdir,sim_plots_folder)):&#xa;  logger.error(&quot;input_dir &quot;+os.path.join(outputdir,sim_plots_folder)+&#xa;  &quot; does not exist. Analyse the data first.&quot;)return False&#xa;&#xa;logger.info(&quot;Generating LaTeX report&quot;)&#xa;logger.info(model)&#xa;filename_prefix=&quot;report__double_param_scan_&quot;&#xa;latex_report_dps(outputdir,sim_plots_folder,filename_prefix,&#xa;model,scanned_par1,scanned_par2)logger.info(&quot;Generating PDF report&quot;)&#xa;pdf_report(outputdir,filename_prefix+model+&quot;.tex&quot;)&#xa;return True&#xa;"/>
    <sourcecode id="kTrsYnFrTth3" value="__doc__=Pipeline.read_config.__doc__&#xa;(generate_data,analyse_data,generate_report,&#xa;project_dir,model)=self.read_common_config(lines)simulator='Copasi'&#xa;scanned_par1=&quot;&quot;&#xa;scanned_par2=&quot;&quot;&#xa;sim_length=1&#xa;for line in lines:&#xa;  logger.info(line)&#xa;  if line[0]==&quot;simulator&quot;:&#xa;    simulator=line[1]&#xa;&#xa;  elif line[0]==&quot;scanned_par1&quot;:&#xa;    scanned_par1=line[1]&#xa;&#xa;  elif line[0]==&quot;scanned_par2&quot;:&#xa;    scanned_par2=line[1]&#xa;&#xa;  elif line[0]==&quot;sim_length&quot;:&#xa;    sim_length=line[1]&#xa;&#xa;&#xa;return(generate_data,analyse_data,generate_report,&#xa;project_dir,simulator,model,scanned_par1,scanned_par2,sim_length"/>
    <sourcecode id="JCBArQsi57tU" value="__doc__=Pipeline.__init__.__doc__&#xa;Pipeline.__init__(self,data_folder,models_folder,working_folder,sim_data_folder,sim_plots_folder)&#xa;self.__sensitivities_dir=&quot;sensitivities&quot;&#xa;"/>
    <sourcecode id="l8ERPiZCH6YG" value="__doc__=Pipeline.run.__doc__&#xa;logger.info(&quot;Reading file &quot;+config_file+&quot; : \n&quot;)&#xa;try:&#xa;  (generate_data,analyse_data,generate_report,&#xa;  project_dir,simulator,model)=self.config_parser(config_file,&quot;sensitivity&quot;)&#xa;except Exception as e:&#xa;  logger.error(e.message)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;models_dir=os.path.join(project_dir,self.get_models_folder())&#xa;outputdir=os.path.join(project_dir,self.get_working_folder(),model[:-4],self.__sensitivities_dir)&#xa;start=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Processing model &quot;+model)&#xa;logger.info(&quot;;logger.info(&quot;&quot;)&#xa;if not os.path.exists(outputdir):&#xa;  os.mkdir(outputdir)&#xa;&#xa;if generate_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data generation:&quot;)&#xa;  logger.info(&quot;;status=Sens.generate_data(simulator,&#xa;  model,self.get_models_dir(),outputdir)if not status:&#xa;    return False&#xa;&#xa;&#xa;if analyse_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data analysis:&quot;)&#xa;  logger.info(&quot;;status=Sens.analyse_data(outputdir)&#xa;  if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_report:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Report generation:&quot;)&#xa;  logger.info(&quot;;status=Sens.generate_report(model,outputdir,self.get_sim_plots_folder())&#xa;  if not status:&#xa;    return False&#xa;&#xa;&#xa;end=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n\nPipeline elapsed time (using Python datetime): &quot;+str(end-start))&#xa;if len(glob.glob(os.path.join(outputdir,'*.csv')))>0:&#xa;  return True&#xa;&#xa;return False&#xa;"/>
    <sourcecode id="HdLMfNqtaAmY" value="if not os.path.isfile(os.path.join(inputdir,model)):&#xa;  logger.error(os.path.join(inputdir,model)+&quot; does not exist.&quot;)&#xa;  return False&#xa;&#xa;refresh(outputdir,model[:-4])&#xa;logger.info(&quot;Sensitivity analysis for &quot;+model)&#xa;try:&#xa;  sim=cls.get_simul_obj(simulator)&#xa;  sim.sensitivity_analysis(model,inputdir,outputdir)&#xa;&#xa;except Exception as e:&#xa;  logger.error(&quot;simulator: &quot;+simulator+&quot; not found.&quot;)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;return True&#xa;"/>
    <sourcecode id="5cOYaqmVVHZx" value="p=subprocess.Popen(['Rscript',os.path.join(os.path.dirname(__file__),'sens_plot.r'),&#xa;outputdir])p.wait()&#xa;return True&#xa;"/>
    <sourcecode id="hr2RAQOplXF5" value="if not os.path.exists(os.path.join(outputdir,sim_plots_folder)):&#xa;  logger.error(&quot;input_dir &quot;+os.path.join(outputdir,sim_plots_folder)+&#xa;  &quot; does not exist. Analyse the data first.&quot;)return False&#xa;&#xa;logger.info(&quot;Generating LaTeX report&quot;)&#xa;filename_prefix=&quot;report__sensitivity_&quot;&#xa;latex_report_sim(outputdir,sim_plots_folder,model,filename_prefix)&#xa;logger.info(&quot;Generating PDF report&quot;)&#xa;pdf_report(outputdir,filename_prefix+model+&quot;.tex&quot;)&#xa;return True&#xa;"/>
    <sourcecode id="JCgIPLLPFLzT" value="__doc__=Pipeline.read_config.__doc__&#xa;(generate_data,analyse_data,generate_report,&#xa;project_dir,model)=self.read_common_config(lines)simulator='Copasi'&#xa;for line in lines:&#xa;  logger.info(line)&#xa;  if line[0]==&quot;simulator&quot;:&#xa;    simulator=line[1]&#xa;&#xa;  break&#xa;&#xa;return(generate_data,analyse_data,generate_report,&#xa;project_dir,simulator,model"/>
    <sourcecode id="5CCtYMA7dxqg" value="__doc__=Pipeline.__init__.__doc__&#xa;Pipeline.__init__(self,data_folder,models_folder,working_folder,sim_data_folder,sim_plots_folder)&#xa;"/>
    <sourcecode id="AQVGGe5X6xJy" value="__doc__=Pipeline.run.__doc__&#xa;logger.info(&quot;Reading file &quot;+config_file+&quot; : \n&quot;)&#xa;try:&#xa;  (generate_data,analyse_data,generate_report,&#xa;  project_dir,simulator,model,cluster,pp_cpus,runs,exp_dataset,plot_exp_dataset,xaxis_label,yaxis_label)=self.config_parser(config_file,&quot;simulate&quot;)&#xa;except Exception as e:&#xa;  logger.error(e.message)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;runs=int(runs)&#xa;pp_cpus=int(pp_cpus)&#xa;if runs&lt;1:&#xa;  logger.error(&quot;variable `runs` must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;models_dir=os.path.join(project_dir,self.get_models_folder())&#xa;outputdir=os.path.join(project_dir,self.get_working_folder(),model[:-4])&#xa;start=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n&quot;)&#xa;logger.info(&quot;Processing model &quot;+model)&#xa;logger.info(&quot;;logger.info(&quot;&quot;)&#xa;if not os.path.exists(outputdir):&#xa;  os.makedirs(outputdir)&#xa;&#xa;if generate_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data generation:&quot;)&#xa;  logger.info(&quot;;status=Sim.generate_data(simulator,&#xa;  model,models_dir,os.path.join(outputdir,self.get_sim_data_folder()),cluster,pp_cpus,runs)if not status:&#xa;    return False&#xa;&#xa;&#xa;if analyse_data:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Data analysis:&quot;)&#xa;  logger.info(&quot;;status=Sim.analyse_data(model[:-4],&#xa;  os.path.join(outputdir,self.get_sim_data_folder()),outputdir,os.path.join(outputdir,self.get_sim_plots_folder()),os.path.join(models_dir,exp_dataset),plot_exp_dataset,xaxis_label,yaxis_label)if not status:&#xa;    return False&#xa;&#xa;&#xa;if generate_report:&#xa;  logger.info(&quot;\n&quot;)&#xa;  logger.info(&quot;Report generation:&quot;)&#xa;  logger.info(&quot;;status=Sim.generate_report(model[:-4],&#xa;  outputdir,self.get_sim_plots_folder())if not status:&#xa;    return False&#xa;&#xa;&#xa;end=datetime.datetime.now().replace(microsecond=0)&#xa;logger.info(&quot;\n\nPipeline elapsed time (using Python datetime): &quot;+str(end-start))&#xa;if len(glob.glob(os.path.join(outputdir,self.get_sim_plots_folder(),model[:-4]+'*.png')))>0 and len(&#xa;glob.glob(os.path.join(outputdir,'*'+model[:-4]+'*.pdf')))==1:&#xa;  return True&#xa;&#xa;return False&#xa;"/>
    <sourcecode id="xFHRwDpD1gpY" value="if int(pp_cpus)&lt;1:&#xa;  logger.error(&quot;variable pp_cpus must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if runs&lt;1:&#xa;  logger.error(&quot;variable runs must be greater than 0. Please, check your configuration file.&quot;)&#xa;  return False&#xa;&#xa;if not os.path.isfile(os.path.join(inputdir,model)):&#xa;  logger.error(os.path.join(inputdir,model)+&quot; does not exist.&quot;)&#xa;  return False&#xa;&#xa;refresh(outputdir,model[:-4])&#xa;logger.info(&quot;Simulating model &quot;+model+&quot; for &quot;+str(runs)+&quot; time(s)&quot;)&#xa;try:&#xa;  sim=cls.get_simul_obj(simulator)&#xa;  sim.sim(model,inputdir,outputdir,cluster_type,pp_cpus,runs)&#xa;&#xa;except Exception as e:&#xa;  logger.error(&quot;simulator: &quot;+simulator+&quot; not found.&quot;)&#xa;  import traceback&#xa;  logger.debug(traceback.format_exc())&#xa;  return False&#xa;&#xa;return True&#xa;"/>
    <sourcecode id="226wwjZLn34t" value="if not os.path.exists(inputdir):&#xa;  logger.error(&quot;inputdir &quot;+inputdir+&quot; does not exist. Generate some data first.&quot;)&#xa;  return False&#xa;&#xa;files_to_delete=glob.glob(os.path.join(sim_plots_dir,model+&quot;*&quot;))&#xa;for f in files_to_delete:&#xa;  os.remove(f)&#xa;&#xa;if not os.path.exists(sim_plots_dir):&#xa;  os.mkdir(sim_plots_dir)&#xa;&#xa;logger.info(&quot;Generating statistics from simulations:&quot;)&#xa;process=subprocess.Popen(&#xa;['Rscript',os.path.join(os.path.dirname(__file__),'sim_plot_error_bars.r'),model,inputdir,sim_plots_dir,os.path.join(outputdir,'sim_stats_'+model+'.csv'),exp_dataset,str(plot_exp_dataset),xaxis_label,yaxis_label])process.wait()&#xa;return True&#xa;"/>
    <sourcecode id="VC6jtTzksHhI" value="if not os.path.exists(os.path.join(outputdir,sim_plots_folder)):&#xa;  logger.error(&#xa;  &quot;inputdir &quot;+os.path.join(outputdir,sim_plots_folder)+&quot; does not exist. Analyse the data first.&quot;)return False&#xa;&#xa;logger.info(&quot;Generating LaTeX report&quot;)&#xa;filename_prefix=&quot;report__simulate_&quot;&#xa;latex_report_sim(outputdir,sim_plots_folder,model,filename_prefix)&#xa;logger.info(&quot;Generating PDF report&quot;)&#xa;pdf_report(outputdir,filename_prefix+model+&quot;.tex&quot;)&#xa;return True&#xa;"/>
    <sourcecode id="ZeUFGBFEGVgG" value="__doc__=Pipeline.read_config.__doc__&#xa;(generate_data,analyse_data,generate_report,&#xa;project_dir,model)=self.read_common_config(lines)simulator='Copasi'&#xa;cluster='pp'&#xa;pp_cpus=1&#xa;runs=1&#xa;exp_dataset=''&#xa;plot_exp_dataset=False&#xa;xaxis_label='Time [min]'&#xa;yaxis_label='Level [a.u.]'&#xa;for line in lines:&#xa;  logger.info(line)&#xa;  if line[0]==&quot;simulator&quot;:&#xa;    simulator=line[1]&#xa;&#xa;  elif line[0]==&quot;cluster&quot;:&#xa;    cluster=line[1]&#xa;&#xa;  elif line[0]==&quot;pp_cpus&quot;:&#xa;    pp_cpus=line[1]&#xa;&#xa;  elif line[0]==&quot;runs&quot;:&#xa;    runs=line[1]&#xa;&#xa;  elif line[0]==&quot;exp_dataset&quot;:&#xa;    exp_dataset=line[1]&#xa;&#xa;  elif line[0]==&quot;plot_exp_dataset&quot;:&#xa;    plot_exp_dataset=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;xaxis_label&quot;:&#xa;    xaxis_label=line[1]&#xa;&#xa;  elif line[0]==&quot;yaxis_label&quot;:&#xa;    yaxis_label=line[1]&#xa;&#xa;&#xa;return(generate_data,analyse_data,generate_report,&#xa;project_dir,simulator,model,cluster,pp_cpus,runs,exp_dataset,plot_exp_dataset,xaxis_label,yaxis_label"/>
    <sourcecode id="InXqo2Y0JQNP" value="self.__data_folder=data_folder&#xa;self.__models_folder=models_folder&#xa;self.__working_folder=working_folder&#xa;self.__sim_data_folder=sim_data_folder&#xa;self.__sim_plots_folder=sim_plots_folder&#xa;"/>
    <sourcecode id="2hBAsKYXzzCb" value="pass&#xa;"/>
    <sourcecode id="xbgVWNq1U2qp" value="return self.__data_folder&#xa;"/>
    <sourcecode id="w0qeJ18g3YVC" value="return self.__models_folder&#xa;"/>
    <sourcecode id="nUjRLv1xHUEj" value="return self.__working_folder&#xa;"/>
    <sourcecode id="ccSByjPcUM4M" value="return self.__sim_data_folder&#xa;"/>
    <sourcecode id="Vnq1QRD75umr" value="return self.__sim_plots_folder&#xa;"/>
    <sourcecode id="M0rfZgQaF72o" value="return locate('sbpipe.simul.'+simulator.lower()+'.'+simulator.lower()+'.'+simulator)()&#xa;"/>
    <sourcecode id="j5LPRFZRftSU" value="parser=ConfigParser()&#xa;with open(config_file)as stream:&#xa;  stream=StringIO(stream.read())&#xa;  parser.readfp(stream)&#xa;&#xa;return self.read_config(parser.items(section))&#xa;"/>
    <sourcecode id="KJp81PtQ2p7O" value="pass&#xa;"/>
    <sourcecode id="Ve0H9g7SkOhB" value="generate_data=True&#xa;analyse_data=True&#xa;generate_report=True&#xa;project_dir=&quot;&quot;&#xa;model=&quot;model&quot;&#xa;for line in lines:&#xa;  if line[0]==&quot;generate_data&quot;:&#xa;    generate_data=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;analyse_data&quot;:&#xa;    analyse_data=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;generate_report&quot;:&#xa;    generate_report=:&#xa;      'True':True,'False':False&#xa;    .get(line[1],False)&#xa;&#xa;  elif line[0]==&quot;project_dir&quot;:&#xa;    project_dir=line[1]&#xa;&#xa;  elif line[0]==&quot;model&quot;:&#xa;    model=line[1]&#xa;&#xa;&#xa;return(generate_data,analyse_data,generate_report,&#xa;project_dir,model"/>
    <sourcecode id="cI64YFuo18Gp" value="pass&#xa;"/>
    <sourcecode id="F5VQxoVFkvDH" value="pass&#xa;"/>
    <sourcecode id="hGieeluJYKe5" value="pass&#xa;"/>
    <sourcecode id="IOFH2EwR0pMg" value="pass&#xa;"/>
    <sourcecode id="6OpU6RYYG7yd" value="pass&#xa;"/>
    <sourcecode id="C9G1CWlbFo0F" value="pass"/>
    <sourcecode id="gsoR4WIj2e6O" value="pass&#xa;"/>
    <sourcecode id="0ekub6ZWm7qH" value="report_filename_template=&quot;&quot;&#xa;lower_bounds=[]&#xa;param_names=[]&#xa;start_values=[]&#xa;upper_bounds=[]&#xa;logger.info(&quot;Parsing the xml document&quot;)&#xa;with open(file_in)as file:&#xa;  dom=parse(file)&#xa;  tasks=dom.getElementsByTagName('ListOfTasks')[0].getElementsByTagName('Task')&#xa;  for task in tasks:&#xa;    task_name=task.getAttribute('name')&#xa;    if task_name==&quot;Parameter Estimation&quot;:&#xa;      logger.info(&quot;Retrieving information for &quot;+task_name)&#xa;      report_filename_template=task.getElementsByTagName('Report')[0].getAttribute('target')&#xa;      optim_item_list=task.getElementsByTagName('Problem')[0].getElementsByTagName('ParameterGroup')[&#xa;      0].getElementsByTagName('ParameterGroup')for fit_item in optim_item_list:&#xa;        parameters=fit_item.getElementsByTagName('Parameter')&#xa;        if len(parameters)>0:&#xa;          lower_bounds.append(parameters[0].getAttribute('value'))&#xa;          param_names.append(parameters[1].getAttribute('value'))&#xa;          start_values.append(parameters[2].getAttribute('value'))&#xa;          upper_bounds.append(parameters[3].getAttribute('value'))&#xa;&#xa;&#xa;      break&#xa;&#xa;&#xa;&#xa;return report_filename_template,lower_bounds,param_names,start_values,upper_bounds"/>
    <sourcecode id="VbKcXJUTs2ON" value="self.__copasi=CopasiParser()&#xa;self.__path=path&#xa;self.__filename_in=filename_in&#xa;self.__report_filename_template,self.__lower_bounds,self.__param_names,\&#xa;self.__start_values,self.__upper_bounds=\&#xa;self.__copasi.get_param_estim_val(os.path.join(self.__path,self.__filename_in))"/>
    <sourcecode id="VyTkC2mdLzVy" value="num_files=int(num_files)&#xa;logger.info(&quot;Randomising parameters for:&quot;)&#xa;for i in range(0,num_files):&#xa;  filename_out=self.__filename_in[:-4]+idstr+str(i+1)+&quot;.cps&quot;&#xa;  file_out=os.path.join(self.__path,filename_out)&#xa;  logger.info(filename_out)&#xa;  new_start_values,old_str,new_str=self.__rand_start_value()&#xa;  self.__print_params_to_estim2(new_start_values)&#xa;  self.__replace_start_value(file_out,old_str,new_str)&#xa;&#xa;"/>
    <sourcecode id="l9PJa3VOIkAd" value="num_files=int(num_files)&#xa;logger.debug(&quot;Model replication:&quot;)&#xa;for i in range(0,num_files):&#xa;  filename_out=self.__filename_in[:-4]+idstr+str(i+1)+&quot;.cps&quot;&#xa;  report_filename=self.__report_filename_template[:-4]+idstr+str(i+1)+&quot;.csv&quot;&#xa;  file_out=os.path.join(self.__path,filename_out)&#xa;  file_in=os.path.join(self.__path,self.__filename_in)&#xa;  if os.path.isfile(file_out):&#xa;    os.remove(file_out)&#xa;&#xa;  shutil.copy2(file_in,file_out)&#xa;  self.__replace_report_filename(file_out,report_filename)&#xa;&#xa;"/>
    <sourcecode id="1OVLAW7LZ8SK" value="return self.__copasi&#xa;"/>
    <sourcecode id="ShGwazwEKsij" value="return self.__path&#xa;"/>
    <sourcecode id="wZIusMEd2ckh" value="return self.__filename_in&#xa;"/>
    <sourcecode id="jDUUZcU7MqGN" value="return self.__report_filename_template&#xa;"/>
    <sourcecode id="Gg6RpWIj7I7U" value="return self.__lower_bounds&#xa;"/>
    <sourcecode id="WyImXPbC3Jhl" value="return self.__param_names&#xa;"/>
    <sourcecode id="nIckw73ynV6j" value="return self.__start_values&#xa;"/>
    <sourcecode id="2RELhggJrJz5" value="return self.__upper_bounds&#xa;"/>
    <sourcecode id="krF3rbUBRbNO" value="logger.info(&quot;\t\tParameterName\t\tLowerBound\t\tStartValue\t\tUpperBound&quot;)&#xa;logger.info(&quot;\t\t=============\t\t==========\t\t==========\t\t==========&quot;)&#xa;for i in range(0,len(self.__param_names)):&#xa;  logger.info(&quot;\t\t&quot;+self.__param_names[i][self.__param_names[i].find(&quot;[&quot;)+&#xa;  1:self.__param_names[i].find(&quot;]&quot;)]+&quot;\t\t&quot;+self.__lower_bounds[i]+&quot;\t\t&quot;+self.__start_values[i]+&quot;\t\t&quot;+self.__upper_bounds[i])&#xa;"/>
    <sourcecode id="8o3eTnOBjdcW" value="logger.debug(&quot;\t\tParameter\t\tLowerBound\t\tUpperBound\t\tStartValue\t\tNEWStartValue&quot;)&#xa;logger.debug(&quot;\t\t=========\t\t==========\t\t==========\t\t==========\t\t=============&quot;)&#xa;for i in range(0,len(self.__param_names)):&#xa;  logger.debug(&quot;\t\t&quot;+self.__param_names[i][self.__param_names[i].find(&quot;[&quot;)+&#xa;  1:self.__param_names[i].find(&quot;]&quot;)]+&quot;\t\t&quot;+self.__lower_bounds[i]+&quot;\t\t&quot;+self.__upper_bounds[i]+&quot;\t\t&quot;+self.__start_values[i]+&quot;\t\t&quot;+new_start_values[i])&#xa;"/>
    <sourcecode id="dleiIHp6HCmO" value="new_start_values=[]&#xa;old_str=[]&#xa;new_str=[]&#xa;for i in range(0,len(self.__param_names)):&#xa;  if(str(self.__lower_bounds[i].find(&quot;CN=Root,Model=&quot;)!=-1)or&#xa;  str(self.__upper_bounds[i].find(&quot;CN=Root,Model=&quot;)!=-1)):&#xa;    new_start_values.append(str(random.uniform(0.00001,1)))&#xa;&#xa;  else:&#xa;    new_start_values.append(str(random.uniform(float(self.__lower_bounds[i]),&#xa;    float(self.__upper_bounds[i]))))&#xa;  old_str.append('&lt;Parameter name=&quot;StartValue&quot; type=&quot;float&quot; value=&quot;'+self.__start_values[i]+'&quot;/>')&#xa;  new_str.append('&lt;Parameter name=&quot;StartValue&quot; type=&quot;float&quot; value=&quot;'+new_start_values[i]+'&quot;/>')&#xa;&#xa;return new_start_values,old_str,new_str&#xa;"/>
    <sourcecode id="QsdbPLKK3tkC" value="for i in range(0,len(self.__param_names)):&#xa;  s=self.__param_names[i]&#xa;  ctrl_str='&lt;Parameter name=&quot;ObjectCN&quot; type=&quot;cn&quot; value=&quot;'+s+'&quot;/>'&#xa;  name_line_num=get_pattern_pos(ctrl_str,file_out)&#xa;  start_val_line_num=get_pattern_pos(old_str[i],file_out)&#xa;  if int(name_line_num)==int(start_val_line_num)-1:&#xa;    replace_str_in_file(file_out,old_str[i],new_str[i])&#xa;&#xa;  else:&#xa;    logger.warn(&quot;Error - Found wrong instance: [&quot;+ctrl_str+&quot;] at line &quot;+name_line_num)&#xa;&#xa;&#xa;"/>
    <sourcecode id="S1CDUGbGiXlK" value="replace_str_in_file(file_out,self.__report_filename_template,report_filename)"/>
    <sourcecode id="hga99qKY5ZiO" value="self.lock=thread.allocate_lock()&#xa;self.__count=0&#xa;"/>
    <sourcecode id="tcJ4qQMl4Rpb" value="self.lock.acquire()&#xa;self.__count+=1&#xa;self.__value=self.__value and value&#xa;self.lock.release()&#xa;"/>
    <sourcecode id="ppiJhzWrP0NN" value="temp=0.0&#xa;self.lock.acquire()&#xa;temp=self.__value&#xa;self.lock.release()&#xa;return temp&#xa;"/>
    <sourcecode id="f1Y2p8vknaYn" value="temp=0.0&#xa;self.lock.acquire()&#xa;temp=self.__count&#xa;self.lock.release()&#xa;return temp"/>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
